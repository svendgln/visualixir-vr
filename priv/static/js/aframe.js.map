{"version":3,"sources":["aframe/aframeApp.js","aframe/cluster_view.js","aframe/components/camrender.js","aframe/components/clicktest.js","aframe/components/customcontrols.js","aframe/components/debug.js","aframe/components/enterleave.js","aframe/components/menu.js","aframe/components/menubutton.js","aframe/graph.js","aframe/process.js","aframe/test.js","aframe/user_socket.js","node_modules/phoenix_html/priv/static/phoenix_html.js","node_modules/phoenix/priv/static/phoenix.cjs.js"],"names":["console","log","components","forEach","c","require","AframeApp","menu","Menu","cluster_view","ClusterView","$","window","socket","app","graph_container","processes","grouping_processes","graph","Graph","channel","join","on","msg","visualizeNode","each","pids","pid","info","addProcess","update","process","Process","isGroupingProcess","node","d3","values","maybe_unlinked_process","addInvisibleLink","links","other_pid","addLink","grouping_process","invisible_links","id","from","to","AFRAME","registerComponent","schema","fps","type","cid","height","width","init","counter","canvasEl","document","getElementById","data","renderer","THREE","WebGLRenderer","antialias","canvas","setPixelRatio","devicePixelRatio","setSize","domElement","crossorigin","tick","time","timeDelta","loopFPS","hmdIsXFasterThanDesiredFPS","renderEveryNthFrame","Math","round","render","el","sceneEl","object3D","object3DMap","camera","dependencies","material","getObject3D","map","needsUpdate","addEventListener","evt","setAttribute","getAttribute","cameraRig","speed","controllerLeft","controllerRight","self","timer","quat","Quaternion","vecZ","Vector3","vecX","axis","m","querySelector","detail","pos","position","copy","quaternion","applyQuaternion","axisX","axisZ","normalize","multiplyScalar","add","set","x","getComponent","y","z","rot","rotation","line","querySelectorAll","vecz","vecx","l","setFromQuaternion","lookAt","entity","newParent","cloneNode","appendChild","parentNode","removeChild","nodesContainer","containerHeight","containerWidth","nodes","nodeListSize","nodePadding","nodeWidth","nodeHeight","maxNodes","floor","updateNodes","receive","length","select","selectAll","attr","d","i","first","offset","flushToDOM","push","nodeClick","target","args","nodeName","lol","hasClass","removeClass","cleanupNode","addClass","registerSystem","commands","Map","test","addCommand","test2","listCommands","name","func","delCommand","run","get","color","system","systems","r","g","b","highlightColor","Color","offsetHSL","colorHex","getHexString","highlightHex","ALPHA_DECAY","PID_RADIUS","INVISIBLE_LINK_STRENGTH","LINK_LENGTH","REPULSION","CENTERING_STRENGTH","container","nodeContainer","linkContainer","invisibleLinkContainer","forceCenter","forceLink","distance","forceInvisibleLink","strength","forceManyBody","forceSim","forceSimulation","force","forceX","forceY","velocityDecay","alphaDecay","msgs","sort","source","link","link_id","force_restart","pids_list","links_list","invisible_links_list","pids_by_node","nest","key","nodes_list","keys","testo","shit","enter","append","merge","exit","remove","new_invisible_links","alpha","restart","GROUPING_PID","application","msg_traced","replace","DATA","renderData","linksOLD","addNode","unshift","sim","removeNode","pop","index","ticked","setTimeout","Socket","params","token","userToken","connect"],"mappings":"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AqC,IAArC,CAAV,CAHY,CAIZ;AACH;;AAED,SAAS8K,KAAT,GAAiB;AACb/K,SAAO,CAACC,GAAR,CAAY,eAAZ;AACA0P,YAAU;AACb,C,CACD;;;AACAjM,QAAQ,CAACmH,IAAT,GAAgBA,IAAhB;AACAnH,QAAQ,CAACqH,KAAT,GAAiBA,KAAjB;;;;;;;;;;;AC/IA;;AAJA;AACA;AAEA;AAGA;AACA;AACA,IAAIlK,MAAM,GAAG,IAAImP,eAAJ,CAAW,SAAX,EAAsB;AAACC,QAAM,EAAE;AAACC,SAAK,EAAEtP,MAAM,CAACuP;AAAf;AAAT,CAAtB,CAAb,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAtP,MAAM,CAACuP,OAAP;AACApQ,OAAO,CAACC,GAAR,CAAY,wBAAZ,E,CAEA;AACA;AACA;AACA;;eAGeY,M;;;;CC9Df;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"../priv/static/js/aframe.js","sourcesContent":["console.log(\"loading aframe app\");\r\n\r\n// const fs = require('fs');\r\n\r\n// function loadComponents() {\r\n//     const path = './components';\r\n//     let files = fs.readdirSync(path).filter(file => file.endsWith('.js'));\r\n//     console.log(files)\r\n// }\r\n\r\nimport \"phoenix_html\";\r\nimport socket from \"./user_socket.js\";\r\nimport Menu from \"./components/menu.js\";\r\nimport ClusterView from \"./cluster_view.js\";\r\n\r\n//window.socket.channel(\"nodes\", {}).join().receive(\"ok\", () => console.log('FRFRFRF'));\r\n// temp fix\r\nconst components = ['clicktest.js', 'customcontrols.js', 'debug.js', 'enterleave.js', 'menubutton.js', 'menu.js', 'camrender.js']\r\ncomponents.forEach(c => {\r\n    console.log('importing ', c);\r\n    require(`./components/${c}`);\r\n});\r\n\r\nclass AframeApp {\r\n    constructor() {\r\n        this.menu = new Menu();\r\n        this.cluster_view = new ClusterView('NOT USED');\r\n    }\r\n}\r\n// on document load\r\n$(() => {\r\n    window.socket = socket;\r\n    window.app = new AframeApp();\r\n})\r\n//import './test.js';\r\n\r\n","import Graph from './graph.js';\r\nimport Process from './process.js';\r\n\r\nexport default class {\r\n    constructor(graph_container) {\r\n        console.log('CLUSTER CLASS loaded')\r\n        this.processes = {};\r\n        this.grouping_processes = {};\r\n\r\n        this.graph = new Graph(graph_container, this);\r\n\r\n        this.channel = window.socket.channel('trace', {});\r\n        this.channel.join();\r\n\r\n        this.channel.on(\"visualize_node\", msg => this.visualizeNode(msg));\r\n    }\r\n\r\n    visualizeNode(msg) {\r\n        console.log('VISUALIZEEEE ', msg);\r\n        $.each(msg.pids, (pid, info) => this.addProcess(pid, info));\r\n        this.graph.update(true);\r\n    }\r\n\r\n    addProcess(pid, info) {\r\n        if (this.processes[pid]) return; //exists\r\n\r\n        let process = this.processes[pid] = new Process(pid, info);\r\n\r\n        // 1 grouping process per node\r\n        if (process.isGroupingProcess()) {\r\n            this.grouping_processes[process.node] = process;\r\n\r\n            // since this is the first time the grouping process has been seen, go through all processes and create invisble links\r\n            d3.values(this.processes).forEach(maybe_unlinked_process => {\r\n                if (!maybe_unlinked_process.isGroupingProcess()) {\r\n                    this.addInvisibleLink(maybe_unlinked_process);\r\n                }\r\n            });\r\n        } else {\r\n            this.addInvisibleLink(process);\r\n        }\r\n        info.links.forEach(other_pid => this.addLink(process, this.processes[other_pid]));\r\n    }\r\n\r\n    // if grouping process not yet seen, skip\r\n    // grouping p seen -> add all skipped nodes\r\n    // each node afterwards will be added right away\r\n    // FIX LE EPIC EXPLANATION lol\r\n    addInvisibleLink(process) {\r\n        // 1 per node name\r\n        let grouping_process = this.grouping_processes[process.node];\r\n        if (grouping_process) {\r\n            // process was added before\r\n            grouping_process.invisible_links[process.id] = process;\r\n            this.graph.addInvisibleLink(grouping_process, process); //TODO\r\n        }\r\n        // not yet seen, skip and add later..\r\n    }\r\n\r\n    addLink(from, to) {\r\n        if (from && to) {\r\n            from.links[to.id] = to;\r\n            to.links[from.id] = from;\r\n            this.graph.addLink(from, to); //TODO\r\n        }\r\n    }\r\n}","//https://jgbarah.github.io/aframe-playground/camrender-01/\r\nAFRAME.registerComponent('camrender', {\r\n    schema: {\r\n        fps: {\r\n            type: 'number',\r\n            default: 90.0\r\n        },\r\n        cid: {\r\n            type: 'string',\r\n            default: 'camRenderer'\r\n        },\r\n        height: {\r\n            type: 'number',\r\n            default: 300\r\n        },\r\n        width: {\r\n            type: 'number',\r\n            default: 400\r\n        }\r\n    },\r\n\r\n    init: function() {\r\n        console.log('INIT CAM2');\r\n        // Counter for ticks since last render\r\n        this.counter = 0;\r\n        // Find canvas element to be used for rendering\r\n        let canvasEl = document.getElementById(this.data.cid);\r\n        // Create renderer\r\n        this.renderer = new THREE.WebGLRenderer( { antialias: true, canvas: canvasEl } );\r\n        this.renderer.setPixelRatio( window.devicePixelRatio );\r\n        this.renderer.setSize( this.data.width, this.data.height );\r\n        // Set properties for renderer DOM element\r\n        this.renderer.domElement.crossorigin = \"anonymous\"\r\n        this.renderer.domElement.height = this.data.height;\r\n        this.renderer.domElement.width = this.data.width;\r\n    },\r\n\r\n    tick: function(time, timeDelta) {\r\n        let loopFPS = 1000.0 / timeDelta;\r\n        let hmdIsXFasterThanDesiredFPS = loopFPS / this.data.fps;\r\n        let renderEveryNthFrame = Math.round(hmdIsXFasterThanDesiredFPS);\r\n        if(this.counter % renderEveryNthFrame === 0){\r\n            this.renderer.render( this.el.sceneEl.object3D , this.el.object3DMap.camera );\r\n            }\r\n        this.counter += 1;\r\n    },\r\n});\r\n\r\nAFRAME.registerComponent('canvas-updater', {\r\n    dependencies: ['geometry', 'material'],\r\n\r\n    tick: function () {\r\n\t    let el = this.el;\r\n\t    let material;\r\n\t    material = el.getObject3D('mesh').material;\r\n\t    if (!material.map) { return; }\r\n        material.map.needsUpdate = true;\r\n    }\r\n});","\r\nAFRAME.registerComponent('clicktest', {\r\n    init: function () {\r\n        console.log('CLICK INIT');\r\n        var el = this.el;\r\n        el.addEventListener('click', evt => {\r\n            console.log(el);\r\n            console.log('trigger pressed');\r\n            el.setAttribute('visible', !el.getAttribute('visible'));\r\n        });\r\n    }\r\n})","AFRAME.registerComponent('custom-controls', {\r\n    schema: {\r\n        cameraRig: { type: 'selector', default: '#cameraRig' },\r\n        camera: { type: 'selector', default: '#camera' },\r\n        speed: { type: 'number', default: 0.1 },\r\n        controllerLeft: { 'type': 'selector', default: '#controllerLeft' },\r\n        controllerRight: { 'type': 'selector', default: '#controllerRight' }\r\n    },\r\n\r\n    init: function () {\r\n        console.log('custom controls loaded');\r\n        const el = this.el; //probs not needed\r\n        const self = this;\r\n        this.timer = 0;\r\n        this.quat = new THREE.Quaternion();\r\n        this.vecZ = new THREE.Vector3(0, 0, -1); //forward direction of camera -z\r\n        this.vecX = new THREE.Vector3(1, 0, 0); // x axis for sideways movement\r\n        this.axis = [0, 0]; //controller trackpad x,z axis\r\n\r\n\r\n        // controller events\r\n        // trigger\r\n        controllerLeft.addEventListener('triggerdown', evt => {\r\n            console.log('LEFT TRIGGER');\r\n            \r\n        });\r\n        controllerRight.addEventListener('triggerdown', evt => {\r\n            console.log('RIGHT TRIGGER');\r\n        });\r\n\r\n        // grip button\r\n        controllerLeft.addEventListener('gripdown', evt => {\r\n            console.log('LEFT GRIP');\r\n        });\r\n\r\n        controllerRight.addEventListener('gripdown', evt => {\r\n            console.log('RIGHT GRIP');\r\n        });\r\n\r\n        // menu button\r\n        controllerLeft.addEventListener('menudown', evt => {\r\n            console.log('LEFT MENU');\r\n            // toggle overview cam, on hide: remove components to prevent updates\r\n            // movable x/z when toggled?..\r\n        });\r\n\r\n        controllerRight.addEventListener('menudown', evt => {\r\n            console.log('RIGHT MENU');\r\n            // call this.somefunction toggle menu idk\r\n            const m = document.querySelector('#menu');\r\n            m.setAttribute('visible', !m.getAttribute('visible'));\r\n            console.log('menu is now', !m.getAttribute('visible')? 'not visible' : 'visible');\r\n        });\r\n\r\n        // trackpad\r\n        controllerLeft.addEventListener('axismove', evt => {\r\n            // position on trackpad, x,z values [-1,1]\r\n            const axis = evt.detail.axis;\r\n            this.axis = axis;\r\n        });\r\n\r\n        // right trackpad: use click and axis location to create arrow key functionality?.. for.. something..\r\n    },\r\n\r\n    tick: function (time, timeDelta) {\r\n        const vecX = this.vecX;\r\n        const vecZ = this.vecZ;\r\n\r\n        const pos = this.data.cameraRig.object3D.position;\r\n        // camera rotation quaternion\r\n        this.quat.copy(this.data.camera.object3D.quaternion);\r\n        //apply to direction vectors\r\n        vecZ.applyQuaternion(this.quat);\r\n        vecX.applyQuaternion(this.quat);\r\n\r\n        // scale vecs with speed scalar, add to position..\r\n        const axis = this.axis;\r\n        const axisX = axis[0] * this.data.speed;\r\n        const axisZ = axis[1] * this.data.speed;\r\n        // length 1\r\n        vecZ.normalize();\r\n        vecX.normalize();\r\n        // closer to edge of trackpad = faster\r\n        vecZ.multiplyScalar(axisZ);\r\n        vecX.multiplyScalar(axisX);\r\n\r\n        pos.add(vecZ);\r\n        // add x and z component of vecX to position: only vecZ changes height\r\n        this.data.cameraRig.object3D.position.set(pos.x + vecX.getComponent(0), pos.y, pos.z + vecX.getComponent(2));\r\n        // reset NEEDED?\r\n        this.vecZ.set(0, 0, -1);\r\n        this.vecX.set(1, 0, 0);\r\n    }\r\n});","console.log('more bullshit');\r\nAFRAME.registerComponent('testing', {\r\n    schema: {\r\n        cameraRig: { type: 'selector', default: '#cameraRig' },\r\n        camera: { type: 'selector', default: '#camera' }\r\n    },\r\n    init: function () {\r\n        console.log('testing component loaded');\r\n        this.timer = 0;\r\n    },\r\n    tick: function (time, timeDelta) {\r\n        this.timer += timeDelta\r\n        if (this.timer > 1000) {\r\n            this.timer = 0\r\n            //console.log('log test')\r\n            //TEST\r\n            const rot = this.data.camera.object3D.rotation;\r\n            const quat = this.data.camera.object3D.quaternion;\r\n\r\n            const line = document.querySelectorAll('#LINE');\r\n            var vecz = new THREE.Vector3(0, 0, -1);\r\n            var vecx = new THREE.Vector3(1, 0, 0);\r\n            vecx.applyQuaternion(quat); //cam rotation\r\n            vecz.applyQuaternion(quat);\r\n            line.forEach(l => {\r\n                l.object3D.rotation.setFromQuaternion(quat);\r\n            });\r\n            //var currentPos = this.data.cameraRig.object3D.position;\r\n            //currentPos.add(vecz);\r\n            //console.log(this.data.cameraRig.object3D.position, currentPos);\r\n            \r\n\r\n            //rando test\r\n            //add 1.6 to height before pointing\r\n            //maybe fixed x/z rotation..\r\n            document.querySelector('#POINTER').object3D.lookAt(document.querySelector('#cameraRig').object3D.position);\r\n        }\r\n    }\r\n});","// component needed?\r\nAFRAME.registerComponent('enterleave', {\r\n    init: function () {\r\n        var el = this.el;\r\n        console.log(this.el);\r\n        console.log('enter/leave');\r\n        el.addEventListener('enterleave', function (evt) {\r\n            console.log('(╯°□°）╯︵ ┻━┻')\r\n        })\r\n    }\r\n})","\r\nAFRAME.registerComponent('menu', {\r\n    init: function () {\r\n        console.log('menu init');\r\n        //let t = new Menu();\r\n\r\n        document.querySelector('a-scene').addEventListener('enter-vr', function () {\r\n            console.log(\"ENTERED VR\");\r\n            // attach menu to controller\r\n\r\n            let entity = document.querySelector('#menu');\r\n            let newParent = document.querySelector('#controllerRight');\r\n            //entity.flushToDOM(); //not needed? dafuq\r\n            let copy = entity.cloneNode(true);\r\n            newParent.appendChild(copy);\r\n            entity.parentNode.removeChild(entity);\r\n            //resize\r\n            copy.setAttribute('scale', '0.5 0.5 0.5');\r\n            copy.setAttribute('rotation', '-30 0 0');\r\n            copy.setAttribute('position', '0 0.2 -0.2');\r\n        });\r\n\r\n\r\n\r\n    }\r\n});\r\n\r\n\r\nexport default class Menu {\r\n    constructor() {\r\n        console.log(\"MENU LOADED\")\r\n        //TODO: scroll button when #nodes > max\r\n        this.nodesContainer = document.querySelector('a-scene #menu-nodes');\r\n        console.log('CONTAINER: ', this.nodesContainer);\r\n        \r\n        this.containerHeight = this.nodesContainer.getAttribute('geometry').height;\r\n        this.containerWidth = this.nodesContainer.getAttribute('geometry').width;\r\n        this.channel = window.socket.channel(\"nodes\", {});\r\n        this.nodes = [];\r\n        this.nodeListSize = 3; //max visible nodes in the menu list at once\r\n        this.nodePadding = 0.05; //test\r\n        this.nodeWidth = this.containerWidth - this.nodePadding;\r\n        this.nodeHeight = 0.1;\r\n        this.maxNodes = Math.floor(this.containerHeight / (this.nodeHeight + this.nodePadding));\r\n        console.log(\r\n            'container height: ', this.containerHeight,\r\n            '\\nnode height+padding: ', this.nodeHeight + this.nodePadding,\r\n            'max #nodes -> ', this.maxNodes\r\n        )\r\n\r\n        let updateNodes = msg => {\r\n            this.update(msg.nodes);\r\n        };\r\n\r\n        this.channel.join().receive(\"ok\", updateNodes);\r\n        // update msg callback\r\n        this.channel.on(\"update\", updateNodes);\r\n    }\r\n\r\n    update(nodes) {\r\n        console.log('updating nodes: ', nodes);\r\n        const l = nodes.length;\r\n\r\n\r\n        //d3\r\n        d3.select('a-scene').select('#menu-nodes')\r\n            .selectAll('a-entity')\r\n            .data(nodes)\r\n            .join('a-entity')\r\n            .attr('geometry', (d, i) => {\r\n                return `primitive: plane; width: ${this.nodeWidth}; height: ${this.nodeHeight};`\r\n            })\r\n            .attr('position', (d, i) => {\r\n                console.log((this.containerHeight / 2) - (this.nodeHeight / 2));\r\n                let first = (this.containerHeight / 2) - (this.nodeHeight / 2) - this.nodePadding;\r\n                let offset = (this.nodeHeight + this.nodePadding) * -i;\r\n                return `0 ${first + offset} 0.01`\r\n            })\r\n            .attr('material', (d, i) => {\r\n                return 'shader: flat; color: red'\r\n            })\r\n            .attr('text', (d, i) => {\r\n                return `value: ${d}; align: center; wrapCount: 20`\r\n            })\r\n            .attr('menu-button', (d, i) => `name: nodeClick; args: ${d}`)\r\n            .attr('raycastable', (d, i) => '')\r\n            .each(function (d, i) {\r\n                //update DOM with correct attribute values\r\n                this.flushToDOM();\r\n                console.log('flushed: ', this);\r\n            });\r\n    }\r\n\r\n    visualizeNode(node) {\r\n        console.log('visualize callback');\r\n        this.channel.push('visualize', node);\r\n    }\r\n\r\n    cleanupNode(node) {\r\n        console.log('cleanup callback')\r\n    }\r\n}\r\n// temp :p\r\n// create instance in aframeApp..\r\n//let t = new Menu(\"aa\");\r\n//moved to menu component init\r\n//t.update(\"a\");","console.log('MENU BUTTON LOADED');\r\n// move to file\r\nfunction nodeClick(target, args) {\r\n    let nodeName = args[0]\r\n    console.log('clicked on', nodeName);\r\n    //send websocket msg.. check target selected class..\r\n    document.lol = target;\r\n    if ($(target).hasClass('selected')) {\r\n        $(target).removeClass('selected');\r\n        target.setAttribute('text', 'color: white');\r\n        window.app.menu.cleanupNode(nodeName);\r\n        //target.flushToDOM();\r\n    } else {\r\n        $(target).addClass('selected');\r\n        target.setAttribute('text', 'color: green');\r\n        window.app.menu.visualizeNode(nodeName);\r\n        //target.flushToDOM();\r\n    }\r\n}\r\n\r\nAFRAME.registerSystem('menu-button', {\r\n\r\n    init: function () {\r\n        //button name?/id -> click callbacks\r\n        this.commands = new Map();\r\n        function test(target, args) {\r\n            console.log('custom callback on', target, 'with args: ', args);\r\n            document.test();\r\n        }\r\n        this.addCommand('testRemove', document.test2);\r\n        this.addCommand('test', test);\r\n        this.addCommand('nodeClick', nodeClick);\r\n        this.listCommands();\r\n    },\r\n\r\n    addCommand: function (name, func) {\r\n        this.commands.set(name, func);\r\n    },\r\n\r\n    delCommand: function (name) {\r\n        this.commands.delete(name); //returns boolean\r\n    },\r\n\r\n    listCommands: function () {\r\n        //testing\r\n        for (let [name, func] of this.commands) {\r\n            console.log(name, ' -> ', func);\r\n        }\r\n    },\r\n\r\n    run: function (name, target, args) {\r\n        let func = this.commands.get(name);\r\n        if (func) {\r\n            func(target, args);\r\n        } else {\r\n            console.log('invalid button callback on button ', target, 'with args: ', args);\r\n        }\r\n    }\r\n})\r\n\r\nAFRAME.registerComponent('menu-button', {\r\n    /**\r\n     * schema: color and text, idk what else\r\n     */\r\n    schema: {\r\n        color: { type: 'color', default: '#FF0000' },\r\n        name: { type: 'string' },\r\n        args: { type: 'array', default: [] }\r\n    },\r\n\r\n    init: function () {\r\n        const el = this.el;\r\n        document.el = el;\r\n        //system should be accessible through this.system?..\r\n        const system = this.el.sceneEl.systems['menu-button'];\r\n        console.log('ID: ', this.id, this.system);\r\n        //console.log('test: ', makeButton('#00FF00'));\r\n\r\n        const color = el.components.material.material.color;\r\n        const { r, g, b } = color;\r\n        const highlightColor = new THREE.Color(r, g, b);\r\n        highlightColor.offsetHSL(0.5, 0, 0);\r\n\r\n        const colorHex = `#${color.getHexString()}`;\r\n        const highlightHex = `#${highlightColor.getHexString()}`;\r\n\r\n        console.log(colorHex);\r\n\r\n        el.setAttribute('animation__mouseenter', \"property: components.material.material.color; type: color; to: \" + highlightHex + \"; startEvents: mouseenter; dur: 50\");\r\n        el.setAttribute('animation__mouseleave', \"property: components.material.material.color; type: color; to: \" + colorHex + \"; startEvents: mouseleave; dur: 50\");\r\n        el.setAttribute('animation__click', \"property: scale; from: 1 1 1; to: 1.1 1.1 1.1; startEvents: click; dur: 200; dir: alternate\");\r\n        el.setAttribute('animation__click2', \"property: scale; from: 1.1 1.1 1.1; to: 1 1 1; startEvents: click; dur: 200; delay: 200\");\r\n\r\n        el.addEventListener('click', evt => {\r\n            console.log(evt);\r\n            // evt.target for clicked el\r\n            console.log('SYSTEM: ', system);\r\n            let target = evt.target;\r\n            system.run(this.data.name, target, this.data.args);\r\n        });\r\n\r\n        // test\r\n        // let geometry = el.getObject3D('mesh').geometry;\r\n        // console.log('geometry: ', geometry);\r\n\r\n        // let edges = new THREE.EdgesGeometry(geometry);\r\n        // let line = new THEE.lineSegments(edges, new THREE.LineBasicMaterial({\r\n        //     color: 0xffffff\r\n        // }));\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n// function makeButton(color) {\r\n//     const colorRegex = /^#([0-9a-f]{3}){1,2}$/i;\r\n//     if (!colorRegex.test(color)) {\r\n//         color = '#FF0000';\r\n//     }\r\n//     let el = document.createElement('a-entity');\r\n\r\n\r\n//     return el;\r\n//     return `\r\n//     <a-entity\r\n//         geometry=\"primitive: cylinder; height: 0.1; radius: 0.15\"\r\n//         material={\\`shader: flat; color: ${color}; transparent: true; opacity: 0.5\\`}\r\n//         rotation=\"90 0 0\"\r\n//         position=\"-0.3 0.3 0\"\r\n//     ></a-entity>\r\n//     `\r\n// }","\r\nconst ALPHA_DECAY = 0.015,\r\n    PID_RADIUS = 1, //node size in aframe\r\n    //LABEL_OFFSET_X = \r\n    //LABEL_OFFSET_Y = \r\n    INVISIBLE_LINK_STRENGTH = 0.01,\r\n    LINK_LENGTH = 0.15,//0.15, //aframe\r\n    REPULSION = -0.5,//-0.15,//-LINK_LENGTH,\r\n    CENTERING_STRENGTH = 0.2;\r\n\r\n\r\n// const nodes = [{ test: 'lol' }, {}, {}, {}, {}];\r\n\r\nexport default class {\r\n    constructor(container, cluster_view) {\r\n        console.log('GRAPH loaded', container);\r\n        //this.container = container;\r\n        this.cluster_view = cluster_view;\r\n        this.nodeContainer = d3.select('a-scene').select('#d3-nodes');\r\n        this.linkContainer = d3.select('a-scene').select('#d3-links');\r\n        this.invisibleLinkContainer = d3.select('a-scene').select('#d3-invisible-links');\r\n\r\n        this.forceCenter = d3.forceCenter(0, 0);\r\n        this.forceLink = d3.forceLink().distance(LINK_LENGTH);\r\n        this.forceInvisibleLink = d3.forceLink().strength(INVISIBLE_LINK_STRENGTH);\r\n        this.forceManyBody = d3.forceManyBody().strength(REPULSION);\r\n\r\n        this.forceSim =\r\n            d3.forceSimulation()\r\n                .force('link', this.forceLink)\r\n                .force('invisiblelink', this.forceInvisibleLink)\r\n                .force('charge', this.forceManyBody)\r\n                .force('center', this.forceCenter)\r\n                .force('x', d3.forceX().strength(CENTERING_STRENGTH))\r\n                .force('y', d3.forceY().strength(CENTERING_STRENGTH))\r\n                .velocityDecay(0.2)\r\n                .alphaDecay(ALPHA_DECAY)\r\n                // only change position in on tick?\r\n                // call update only from websocket callbacks?..\r\n                .on('tick', () => this.update(false));\r\n\r\n        this.links = {};\r\n        this.invisible_links = {};\r\n        this.msgs = {};\r\n        //rest not needed yet\r\n    }\r\n\r\n    // Links\r\n    link_id(from, to) {\r\n        return [from.id, to.id].sort().join('-');\r\n    }\r\n\r\n    addLink(source, target) {\r\n        if (source && target) {\r\n            let link = { source: source, target: target },\r\n                id = this.link_id(source, target);\r\n            this.links[id] = link;\r\n        }\r\n    }\r\n\r\n    addInvisibleLink(source, target) {\r\n        if (source && target) {\r\n            let link = { source: source, target: target },\r\n                id = this.link_id(source, target);\r\n            this.invisible_links[id] = link;\r\n        }\r\n    }\r\n\r\n    update(force_restart) {\r\n        let pids_list = d3.values(this.cluster_view.processes),\r\n            links_list = d3.values(this.links),\r\n            invisible_links_list = d3.values(this.invisible_links),\r\n            self = this;\r\n\r\n        let pids_by_node = d3.nest().key(d => d.node).map(pids_list),\r\n            nodes_list = pids_by_node.keys();\r\n\r\n        let processes = this.nodeContainer.selectAll('a-entity').data(pids_list, d => d.id);\r\n        let links = this.linkContainer.selectAll('a-entity').data(links_list, d => this.link_id(d.source, d.target));\r\n        let invisible_links = this.invisibleLinkContainer.selectAll('a-entity').data(invisible_links_list, d => this.link_id(d.source, d.target));\r\n        //console.log('prcs', processes);\r\n\r\n        this.forceSim.nodes(pids_list);\r\n        this.forceSim.force('link').links(links_list);\r\n        this.forceSim.force('invisiblelink').links(invisible_links_list);\r\n\r\n        // update processes \r\n        \r\n        let testo = d3.values(this.cluster_view.grouping_processes);\r\n        let shit = d3.select('a-scene').select('#d3-test')\r\n        .selectAll('a-entity').data(testo, d => d.id);\r\n\r\n        shit.join(\r\n            enter => {\r\n                enter\r\n                // .append('a-entity')\r\n                // .attr('geometry', function (d, i) {\r\n                //     return 'primitive: sphere'\r\n                // })\r\n                // .merge(shit)\r\n                .append('a-entity')\r\n                //.merge(shit)\r\n                .attr('geometry', function (d, i) {\r\n                    //return 'primitive: sphere'\r\n                    return 'primitive: plane; width: 20; height: auto;';\r\n                })\r\n                .attr('position', function (d, i) {\r\n                    //console.log(d);\r\n                    return `${d.x} 5 ${d.y}`\r\n                })\r\n                //make bg transparent\r\n                .attr('material', function(d, i) {\r\n                    return 'color: yellow'\r\n                })\r\n                .attr('text', function (d, i) {\r\n                    return `wrapCount: 20; value: ${d.node}; align: center; color: blue`\r\n                })\r\n                // .each(function(d, i) {\r\n                //     this.flushToDOM()\r\n                // })\r\n                \r\n            },\r\n            update => {\r\n                update\r\n                .attr('position', function (d, i) {\r\n                    //console.log(d);\r\n                    return `${d.x} 5 ${d.y}`\r\n                })\r\n            }\r\n        )\r\n        \r\n        \r\n        \r\n\r\n\r\n        processes.join(\r\n            enter => {\r\n                enter\r\n                    .append('a-entity')\r\n                    .merge(processes)\r\n                    .attr('geometry', function (d, i) {\r\n                        //console.log('adding node');\r\n                        return `primitive: sphere; radius: 0.2`;\r\n                    })\r\n                    .attr('position', function (d, i) {\r\n                        //console.log(d)\r\n                        return `${d.x} 0 ${d.y}`\r\n                    })\r\n                    .attr('material', function (d, i) {\r\n                        let color = 'red';\r\n                        if (d.node == 'TEST@CORSAIR') color = 'green';\r\n                        return `shader: standard; color: ${color}`;\r\n                    });\r\n            },\r\n            update => {\r\n                return update;\r\n            },\r\n            exit => {\r\n                exit.remove();\r\n            }\r\n        );\r\n\r\n        links.join(\r\n            enter => {\r\n                enter\r\n                    .append('a-entity')\r\n                    .merge(links)\r\n                    .attr('line', function (d, i) {\r\n                        return `start: ${d.source.x} 0 ${d.source.y}; end: ${d.target.x} 0 ${d.target.y}; color: green`;\r\n                    })\r\n            }\r\n        );\r\n\r\n        invisible_links.exit().remove();\r\n        let new_invisible_links = invisible_links.enter()\r\n        invisible_links = new_invisible_links.merge(invisible_links);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (force_restart)\r\n            this.forceSim.alpha(1).restart();\r\n    }\r\n}","// this is the name of the pid that otherwise unlinked pids will group around, to keep all of a node's pids together\r\nconst GROUPING_PID = \"application_controller\";\r\n\r\nexport default class {\r\n  constructor(pid, info) {\r\n    this.id = pid;\r\n    this.links = {};\r\n    this.name = info.name;\r\n    this.node = info.node;\r\n    this.application = info.application;\r\n    this.type = info.type;\r\n    this.msg_traced = info.msg_traced;\r\n\r\n    if (this.isGroupingProcess()) {\r\n      this.invisible_links = {};\r\n    }\r\n  }\r\n\r\n  isGroupingProcess() {\r\n    return this.name == GROUPING_PID;\r\n  }\r\n\r\n  qualifiedName() {\r\n    return this.name + \"@\" + this.node.replace(/@.*/, '');\r\n  }\r\n}\r\n","console.log('test loaded');\r\n\r\nconst DATA = [\r\n    { x: 10, y: 10 },\r\n    { x: 2, y: 2 },\r\n    { x: 4, y: 4 },\r\n    { x: 6, y: 6 },\r\n    { x: 8, y: 8 }\r\n];\r\n\r\ndocument.querySelector('a-scene #d3-container')\r\n    .addEventListener('loaded', console.log('el loaded'))\r\n\r\n// old tests\r\nfunction renderData() {\r\n\r\n    d3.select('a-scene').select('#d3-container').selectAll('a-entity')\r\n        .data(DATA)\r\n        .enter()\r\n        .append('a-entity')\r\n        .attr('geometry', function (d, i) {\r\n            return `primitive: sphere; radius: 1`\r\n        })\r\n        .attr('position', function (d, i) {\r\n            console.log('adding sphere on pos', d.x, d.y);\r\n            return `${d.x} 1 ${d.y}`\r\n        })\r\n        .attr('material', function (d, i) {\r\n            return `shader: standard; color: red`\r\n        });\r\n}\r\n\r\n\r\n// test force simulation:\r\nconst nodes = [{ test: 'lol' }, {}, {}, {}, {}];\r\nconst linksOLD = [\r\n    { source: 0, target: 1 },\r\n    { source: 1, target: 2 },\r\n    { source: 2, target: 3 },\r\n    { source: 3, target: 4 }\r\n];\r\n\r\nconst links = []\r\n//     { source: 0, target: 3 },\r\n//     { source: 2, target: 4 },\r\n// ]\r\n\r\n// temp testing function\r\nfunction addNode() {\r\n    nodes.unshift({});\r\n    sim.nodes(nodes);\r\n    sim.alpha(1).restart();\r\n    console.log('reloaded');\r\n}\r\n\r\nfunction removeNode() {\r\n    nodes.pop();\r\n    sim.nodes(nodes);\r\n    sim.alpha(1).restart();\r\n}\r\n\r\nfunction addLink(source, target) {\r\n    if (source && target) {\r\n        let link = { source: source.index, target: target.index }\r\n        links.push(link)\r\n        console.log(links)\r\n        sim.force('link').links(links);\r\n        // no check if exists..\r\n        sim.alpha(1).restart();\r\n    }\r\n}\r\n\r\nconst sim = d3.forceSimulation(nodes)\r\n    .force('charge', d3.forceManyBody().strength(-10)) //default\r\n    .force('center', d3.forceCenter(0, 0))\r\n    .force('link', d3.forceLink().distance(1).links(links))\r\n    .force('x', d3.forceX().strength(0.5))\r\n    .force('y', d3.forceY().strength(0.5))\r\n    .velocityDecay(0.2)\r\n    .alphaDecay(0.02)\r\n    .on('tick', ticked);\r\n\r\n\r\nfunction ticked() {\r\n    const container = d3.select('a-scene').select('#d3-nodes')\r\n        .selectAll('a-entity')\r\n        .data(nodes);\r\n    container.join(\r\n        enter => {\r\n            enter\r\n                .append('a-entity')\r\n                .merge(container)\r\n                .attr('geometry', function (d, i) {\r\n                    return `primitive: sphere; radius: 1`;\r\n                })\r\n                .attr('position', function (d, i) {\r\n                    return `${d.x} 1 ${d.y}`\r\n                })\r\n                .attr('material', function (d, i) {\r\n                    return `shader: standard; color: red`;\r\n                })\r\n        },\r\n        update => {\r\n            return update;\r\n        },\r\n        exit => {\r\n            exit.remove()\r\n                // .transition()\r\n                // .duration(500)\r\n                // .attr('material', 'color: green')\r\n                // .on('end', function () {\r\n                //     d3.select(this).remove();\r\n                // })\r\n                // .selection()\r\n        });\r\n\r\n    let test = d3.select('#d3-links').selectAll('a-entity').data(links, d => `${d.source}-${d.target}`)\r\n        .join('a-entity')\r\n        .attr('line', function (d, i) {\r\n            let source = nodes[d.source.index];\r\n            let target = nodes[d.target.index];\r\n            //console.log(d);\r\n            return `start: ${source.x} 0 ${source.y}; end: ${target.x} 0 ${target.y}; color: green`\r\n        });\r\n\r\n    // links.enter()\r\n    //     .append('a-entity')\r\n    //     .attr('line', function (d, i) {\r\n    //         let source = nodes[d.source];\r\n    //         let target = nodes[d.target];\r\n    //         return `start: ${source.x} 0 ${source.y}; end: ${target.x} 0 ${target.y}; color: green`\r\n    //     })\r\n}\r\n\r\nfunction test() {\r\n    console.log('adding node..');\r\n    addNode();\r\n    setTimeout(() => console.log('adding link..'), 1000);\r\n    //setTimeout(() => addLink(nodes[0], nodes[5]), 1000);\r\n}\r\n\r\nfunction test2() {\r\n    console.log('removing node');\r\n    removeNode();\r\n}\r\n//..\r\ndocument.test = test;\r\ndocument.test2 = test2;","// NOTE: The contents of this file will only be executed if\r\n// you uncomment its entry in \"assets/js/app.js\".\r\n\r\n// Bring in Phoenix channels client library:\r\nimport {Socket} from \"phoenix\"\r\n\r\n// And connect to the path in \"lib/visualixir_vr_web/endpoint.ex\". We pass the\r\n// token for authentication. Read below how it should be used.\r\nlet socket = new Socket(\"/socket\", {params: {token: window.userToken}})\r\n\r\n// When you connect, you'll often need to authenticate the client.\r\n// For example, imagine you have an authentication plug, `MyAuth`,\r\n// which authenticates the session and assigns a `:current_user`.\r\n// If the current user exists you can assign the user's token in\r\n// the connection for use in the layout.\r\n//\r\n// In your \"lib/visualixir_vr_web/router.ex\":\r\n//\r\n//     pipeline :browser do\r\n//       ...\r\n//       plug MyAuth\r\n//       plug :put_user_token\r\n//     end\r\n//\r\n//     defp put_user_token(conn, _) do\r\n//       if current_user = conn.assigns[:current_user] do\r\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\r\n//         assign(conn, :user_token, token)\r\n//       else\r\n//         conn\r\n//       end\r\n//     end\r\n//\r\n// Now you need to pass this token to JavaScript. You can do so\r\n// inside a script tag in \"lib/visualixir_vr_web/templates/layout/app.html.heex\":\r\n//\r\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\r\n//\r\n// You will need to verify the user token in the \"connect/3\" function\r\n// in \"lib/visualixir_vr_web/channels/user_socket.ex\":\r\n//\r\n//     def connect(%{\"token\" => token}, socket, _connect_info) do\r\n//       # max_age: 1209600 is equivalent to two weeks in seconds\r\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1_209_600) do\r\n//         {:ok, user_id} ->\r\n//           {:ok, assign(socket, :user, user_id)}\r\n//\r\n//         {:error, reason} ->\r\n//           :error\r\n//       end\r\n//     end\r\n//\r\n// Finally, connect to the socket:\r\nsocket.connect()\r\nconsole.log('connected to websocket')\r\n\r\n// Now that you are connected, you can join channels with a topic.\r\n// Let's assume you have a channel with a topic named `room` and the\r\n// subtopic is its id - in this case 42:\r\n// let channel = socket.channel(\"nodes:lobby\", {})\r\n\r\n\r\nexport default socket\r\n","\nrequire.register(\"phoenix_html/priv/static/phoenix_html.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix_html\");\n  (function() {\n    \"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"hidden\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n  })();\n});","\nrequire.register(\"phoenix/priv/static/phoenix.cjs.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    var __defProp = Object.defineProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __export = (target, all) => {\n  __markAsModule(target);\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// js/phoenix/index.js\n__export(exports, {\n  Channel: () => Channel,\n  LongPoll: () => LongPoll,\n  Presence: () => Presence,\n  Serializer: () => serializer_default,\n  Socket: () => Socket\n});\n\n// js/phoenix/utils.js\nvar closure = (value) => {\n  if (typeof value === \"function\") {\n    return value;\n  } else {\n    let closure2 = function() {\n      return value;\n    };\n    return closure2;\n  }\n};\n\n// js/phoenix/constants.js\nvar globalSelf = typeof self !== \"undefined\" ? self : null;\nvar phxWindow = typeof window !== \"undefined\" ? window : null;\nvar global = globalSelf || phxWindow || void 0;\nvar DEFAULT_VSN = \"2.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 1e4;\nvar WS_CLOSE_NORMAL = 1e3;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\nvar XHR_STATES = {\n  complete: 4\n};\n\n// js/phoenix/push.js\nvar Push = class {\n  constructor(channel, event, payload, timeout) {\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || function() {\n      return {};\n    };\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n  resend(timeout) {\n    this.timeout = timeout;\n    this.reset();\n    this.send();\n  }\n  send() {\n    if (this.hasReceived(\"timeout\")) {\n      return;\n    }\n    this.startTimeout();\n    this.sent = true;\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    });\n  }\n  receive(status, callback) {\n    if (this.hasReceived(status)) {\n      callback(this.receivedResp.response);\n    }\n    this.recHooks.push({ status, callback });\n    return this;\n  }\n  reset() {\n    this.cancelRefEvent();\n    this.ref = null;\n    this.refEvent = null;\n    this.receivedResp = null;\n    this.sent = false;\n  }\n  matchReceive({ status, response, _ref }) {\n    this.recHooks.filter((h) => h.status === status).forEach((h) => h.callback(response));\n  }\n  cancelRefEvent() {\n    if (!this.refEvent) {\n      return;\n    }\n    this.channel.off(this.refEvent);\n  }\n  cancelTimeout() {\n    clearTimeout(this.timeoutTimer);\n    this.timeoutTimer = null;\n  }\n  startTimeout() {\n    if (this.timeoutTimer) {\n      this.cancelTimeout();\n    }\n    this.ref = this.channel.socket.makeRef();\n    this.refEvent = this.channel.replyEventName(this.ref);\n    this.channel.on(this.refEvent, (payload) => {\n      this.cancelRefEvent();\n      this.cancelTimeout();\n      this.receivedResp = payload;\n      this.matchReceive(payload);\n    });\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {});\n    }, this.timeout);\n  }\n  hasReceived(status) {\n    return this.receivedResp && this.receivedResp.status === status;\n  }\n  trigger(status, response) {\n    this.channel.trigger(this.refEvent, { status, response });\n  }\n};\n\n// js/phoenix/timer.js\nvar Timer = class {\n  constructor(callback, timerCalc) {\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n  reset() {\n    this.tries = 0;\n    clearTimeout(this.timer);\n  }\n  scheduleTimeout() {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1;\n      this.callback();\n    }, this.timerCalc(this.tries + 1));\n  }\n};\n\n// js/phoenix/channel.js\nvar Channel = class {\n  constructor(topic, params, socket) {\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = closure(params || {});\n    this.socket = socket;\n    this.bindings = [];\n    this.bindingRef = 0;\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.stateChangeRefs = [];\n    this.rejoinTimer = new Timer(() => {\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }, this.socket.rejoinAfterMs);\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()));\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset();\n      if (this.isErrored()) {\n        this.rejoin();\n      }\n    }));\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined;\n      this.rejoinTimer.reset();\n      this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n      this.pushBuffer = [];\n    });\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored;\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.onClose(() => {\n      this.rejoinTimer.reset();\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`);\n      this.state = CHANNEL_STATES.closed;\n      this.socket.remove(this);\n    });\n    this.onError((reason) => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `error ${this.topic}`, reason);\n      if (this.isJoining()) {\n        this.joinPush.reset();\n      }\n      this.state = CHANNEL_STATES.errored;\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.joinPush.receive(\"timeout\", () => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout);\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout);\n      leavePush.send();\n      this.state = CHANNEL_STATES.errored;\n      this.joinPush.reset();\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload);\n    });\n  }\n  join(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\");\n    } else {\n      this.timeout = timeout;\n      this.joinedOnce = true;\n      this.rejoin();\n      return this.joinPush;\n    }\n  }\n  onClose(callback) {\n    this.on(CHANNEL_EVENTS.close, callback);\n  }\n  onError(callback) {\n    return this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n  }\n  on(event, callback) {\n    let ref = this.bindingRef++;\n    this.bindings.push({ event, ref, callback });\n    return ref;\n  }\n  off(event, ref) {\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref));\n    });\n  }\n  canPush() {\n    return this.socket.isConnected() && this.isJoined();\n  }\n  push(event, payload, timeout = this.timeout) {\n    payload = payload || {};\n    if (!this.joinedOnce) {\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`);\n    }\n    let pushEvent = new Push(this, event, function() {\n      return payload;\n    }, timeout);\n    if (this.canPush()) {\n      pushEvent.send();\n    } else {\n      pushEvent.startTimeout();\n      this.pushBuffer.push(pushEvent);\n    }\n    return pushEvent;\n  }\n  leave(timeout = this.timeout) {\n    this.rejoinTimer.reset();\n    this.joinPush.cancelTimeout();\n    this.state = CHANNEL_STATES.leaving;\n    let onClose = () => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `leave ${this.topic}`);\n      this.trigger(CHANNEL_EVENTS.close, \"leave\");\n    };\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout);\n    leavePush.receive(\"ok\", () => onClose()).receive(\"timeout\", () => onClose());\n    leavePush.send();\n    if (!this.canPush()) {\n      leavePush.trigger(\"ok\", {});\n    }\n    return leavePush;\n  }\n  onMessage(_event, payload, _ref) {\n    return payload;\n  }\n  isMember(topic, event, payload, joinRef) {\n    if (this.topic !== topic) {\n      return false;\n    }\n    if (joinRef && joinRef !== this.joinRef()) {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", \"dropping outdated message\", { topic, event, payload, joinRef });\n      return false;\n    } else {\n      return true;\n    }\n  }\n  joinRef() {\n    return this.joinPush.ref;\n  }\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return;\n    }\n    this.socket.leaveOpenTopic(this.topic);\n    this.state = CHANNEL_STATES.joining;\n    this.joinPush.resend(timeout);\n  }\n  trigger(event, payload, ref, joinRef) {\n    let handledPayload = this.onMessage(event, payload, ref, joinRef);\n    if (payload && !handledPayload) {\n      throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\");\n    }\n    let eventBindings = this.bindings.filter((bind) => bind.event === event);\n    for (let i = 0; i < eventBindings.length; i++) {\n      let bind = eventBindings[i];\n      bind.callback(handledPayload, ref, joinRef || this.joinRef());\n    }\n  }\n  replyEventName(ref) {\n    return `chan_reply_${ref}`;\n  }\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed;\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored;\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined;\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining;\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving;\n  }\n};\n\n// js/phoenix/ajax.js\nvar Ajax = class {\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n    if (global.XDomainRequest) {\n      let req = new global.XDomainRequest();\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n    } else {\n      let req = new global.XMLHttpRequest();\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n    }\n  }\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n    req.timeout = timeout;\n    req.open(method, endPoint);\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText);\n      callback && callback(response);\n    };\n    if (ontimeout) {\n      req.ontimeout = ontimeout;\n    }\n    req.onprogress = () => {\n    };\n    req.send(body);\n  }\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n    req.open(method, endPoint, true);\n    req.timeout = timeout;\n    req.setRequestHeader(\"Content-Type\", accept);\n    req.onerror = () => {\n      callback && callback(null);\n    };\n    req.onreadystatechange = () => {\n      if (req.readyState === XHR_STATES.complete && callback) {\n        let response = this.parseJSON(req.responseText);\n        callback(response);\n      }\n    };\n    if (ontimeout) {\n      req.ontimeout = ontimeout;\n    }\n    req.send(body);\n  }\n  static parseJSON(resp) {\n    if (!resp || resp === \"\") {\n      return null;\n    }\n    try {\n      return JSON.parse(resp);\n    } catch (e) {\n      console && console.log(\"failed to parse JSON response\", resp);\n      return null;\n    }\n  }\n  static serialize(obj, parentKey) {\n    let queryStr = [];\n    for (var key in obj) {\n      if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n        continue;\n      }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key;\n      let paramVal = obj[key];\n      if (typeof paramVal === \"object\") {\n        queryStr.push(this.serialize(paramVal, paramKey));\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n      }\n    }\n    return queryStr.join(\"&\");\n  }\n  static appendParams(url, params) {\n    if (Object.keys(params).length === 0) {\n      return url;\n    }\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\";\n    return `${url}${prefix}${this.serialize(params)}`;\n  }\n};\n\n// js/phoenix/longpoll.js\nvar LongPoll = class {\n  constructor(endPoint) {\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function() {\n    };\n    this.onerror = function() {\n    };\n    this.onmessage = function() {\n    };\n    this.onclose = function() {\n    };\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n    this.poll();\n  }\n  normalizeEndpoint(endPoint) {\n    return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n  }\n  endpointURL() {\n    return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n  }\n  closeAndRetry() {\n    this.close();\n    this.readyState = SOCKET_STATES.connecting;\n  }\n  ontimeout() {\n    this.onerror(\"timeout\");\n    this.closeAndRetry();\n  }\n  poll() {\n    if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n      return;\n    }\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if (resp) {\n        var { status, token, messages } = resp;\n        this.token = token;\n      } else {\n        status = 0;\n      }\n      switch (status) {\n        case 200:\n          messages.forEach((msg) => {\n            setTimeout(() => {\n              this.onmessage({ data: msg });\n            }, 0);\n          });\n          this.poll();\n          break;\n        case 204:\n          this.poll();\n          break;\n        case 410:\n          this.readyState = SOCKET_STATES.open;\n          this.onopen();\n          this.poll();\n          break;\n        case 403:\n          this.onerror();\n          this.close();\n          break;\n        case 0:\n        case 500:\n          this.onerror();\n          this.closeAndRetry();\n          break;\n        default:\n          throw new Error(`unhandled poll status ${status}`);\n      }\n    });\n  }\n  send(body) {\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if (!resp || resp.status !== 200) {\n        this.onerror(resp && resp.status);\n        this.closeAndRetry();\n      }\n    });\n  }\n  close(_code, _reason) {\n    this.readyState = SOCKET_STATES.closed;\n    this.onclose();\n  }\n};\n\n// js/phoenix/presence.js\nvar Presence = class {\n  constructor(channel, opts = {}) {\n    let events = opts.events || { state: \"presence_state\", diff: \"presence_diff\" };\n    this.state = {};\n    this.pendingDiffs = [];\n    this.channel = channel;\n    this.joinRef = null;\n    this.caller = {\n      onJoin: function() {\n      },\n      onLeave: function() {\n      },\n      onSync: function() {\n      }\n    };\n    this.channel.on(events.state, (newState) => {\n      let { onJoin, onLeave, onSync } = this.caller;\n      this.joinRef = this.channel.joinRef();\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave);\n      this.pendingDiffs.forEach((diff) => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave);\n      });\n      this.pendingDiffs = [];\n      onSync();\n    });\n    this.channel.on(events.diff, (diff) => {\n      let { onJoin, onLeave, onSync } = this.caller;\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff);\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave);\n        onSync();\n      }\n    });\n  }\n  onJoin(callback) {\n    this.caller.onJoin = callback;\n  }\n  onLeave(callback) {\n    this.caller.onLeave = callback;\n  }\n  onSync(callback) {\n    this.caller.onSync = callback;\n  }\n  list(by) {\n    return Presence.list(this.state, by);\n  }\n  inPendingSyncState() {\n    return !this.joinRef || this.joinRef !== this.channel.joinRef();\n  }\n  static syncState(currentState, newState, onJoin, onLeave) {\n    let state = this.clone(currentState);\n    let joins = {};\n    let leaves = {};\n    this.map(state, (key, presence) => {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key];\n      if (currentPresence) {\n        let newRefs = newPresence.metas.map((m) => m.phx_ref);\n        let curRefs = currentPresence.metas.map((m) => m.phx_ref);\n        let joinedMetas = newPresence.metas.filter((m) => curRefs.indexOf(m.phx_ref) < 0);\n        let leftMetas = currentPresence.metas.filter((m) => newRefs.indexOf(m.phx_ref) < 0);\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = this.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n  }\n  static syncDiff(state, diff, onJoin, onLeave) {\n    let { joins, leaves } = this.clone(diff);\n    if (!onJoin) {\n      onJoin = function() {\n      };\n    }\n    if (!onLeave) {\n      onLeave = function() {\n      };\n    }\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key];\n      state[key] = this.clone(newPresence);\n      if (currentPresence) {\n        let joinedRefs = state[key].metas.map((m) => m.phx_ref);\n        let curMetas = currentPresence.metas.filter((m) => joinedRefs.indexOf(m.phx_ref) < 0);\n        state[key].metas.unshift(...curMetas);\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      let refsToRemove = leftPresence.metas.map((m) => m.phx_ref);\n      currentPresence.metas = currentPresence.metas.filter((p) => {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  }\n  static list(presences, chooser) {\n    if (!chooser) {\n      chooser = function(key, pres) {\n        return pres;\n      };\n    }\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence);\n    });\n  }\n  static map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n  }\n  static clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// js/phoenix/serializer.js\nvar serializer_default = {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: { push: 0, reply: 1, broadcast: 2 },\n  encode(msg, callback) {\n    if (msg.payload.constructor === ArrayBuffer) {\n      return callback(this.binaryEncode(msg));\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload];\n      return callback(JSON.stringify(payload));\n    }\n  },\n  decode(rawPayload, callback) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this.binaryDecode(rawPayload));\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload);\n      return callback({ join_ref, ref, topic, event, payload });\n    }\n  },\n  binaryEncode(message) {\n    let { join_ref, ref, event, topic, payload } = message;\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length;\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength);\n    let view = new DataView(header);\n    let offset = 0;\n    view.setUint8(offset++, this.KINDS.push);\n    view.setUint8(offset++, join_ref.length);\n    view.setUint8(offset++, ref.length);\n    view.setUint8(offset++, topic.length);\n    view.setUint8(offset++, event.length);\n    Array.from(join_ref, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(ref, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(topic, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(event, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    var combined = new Uint8Array(header.byteLength + payload.byteLength);\n    combined.set(new Uint8Array(header), 0);\n    combined.set(new Uint8Array(payload), header.byteLength);\n    return combined.buffer;\n  },\n  binaryDecode(buffer) {\n    let view = new DataView(buffer);\n    let kind = view.getUint8(0);\n    let decoder = new TextDecoder();\n    switch (kind) {\n      case this.KINDS.push:\n        return this.decodePush(buffer, view, decoder);\n      case this.KINDS.reply:\n        return this.decodeReply(buffer, view, decoder);\n      case this.KINDS.broadcast:\n        return this.decodeBroadcast(buffer, view, decoder);\n    }\n  },\n  decodePush(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1);\n    let topicSize = view.getUint8(2);\n    let eventSize = view.getUint8(3);\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1;\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize));\n    offset = offset + joinRefSize;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    return { join_ref: joinRef, ref: null, topic, event, payload: data };\n  },\n  decodeReply(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1);\n    let refSize = view.getUint8(2);\n    let topicSize = view.getUint8(3);\n    let eventSize = view.getUint8(4);\n    let offset = this.HEADER_LENGTH + this.META_LENGTH;\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize));\n    offset = offset + joinRefSize;\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize));\n    offset = offset + refSize;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    let payload = { status: event, response: data };\n    return { join_ref: joinRef, ref, topic, event: CHANNEL_EVENTS.reply, payload };\n  },\n  decodeBroadcast(buffer, view, decoder) {\n    let topicSize = view.getUint8(1);\n    let eventSize = view.getUint8(2);\n    let offset = this.HEADER_LENGTH + 2;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    return { join_ref: null, ref: null, topic, event, payload: data };\n  }\n};\n\n// js/phoenix/socket.js\nvar Socket = class {\n  constructor(endPoint, opts = {}) {\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || global.WebSocket || LongPoll;\n    this.establishedConnections = 0;\n    this.defaultEncoder = serializer_default.encode.bind(serializer_default);\n    this.defaultDecoder = serializer_default.decode.bind(serializer_default);\n    this.closeWasClean = false;\n    this.binaryType = opts.binaryType || \"arraybuffer\";\n    this.connectClock = 1;\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder;\n      this.decode = opts.decode || this.defaultDecoder;\n    } else {\n      this.encode = this.defaultEncoder;\n      this.decode = this.defaultDecoder;\n    }\n    let awaitingConnectionOnPageShow = null;\n    if (phxWindow && phxWindow.addEventListener) {\n      phxWindow.addEventListener(\"pagehide\", (_e) => {\n        if (this.conn) {\n          this.disconnect();\n          awaitingConnectionOnPageShow = this.connectClock;\n        }\n      });\n      phxWindow.addEventListener(\"pageshow\", (_e) => {\n        if (awaitingConnectionOnPageShow === this.connectClock) {\n          awaitingConnectionOnPageShow = null;\n          this.connect();\n        }\n      });\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 3e4;\n    this.rejoinAfterMs = (tries) => {\n      if (opts.rejoinAfterMs) {\n        return opts.rejoinAfterMs(tries);\n      } else {\n        return [1e3, 2e3, 5e3][tries - 1] || 1e4;\n      }\n    };\n    this.reconnectAfterMs = (tries) => {\n      if (opts.reconnectAfterMs) {\n        return opts.reconnectAfterMs(tries);\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1e3, 2e3][tries - 1] || 5e3;\n      }\n    };\n    this.logger = opts.logger || null;\n    this.longpollerTimeout = opts.longpollerTimeout || 2e4;\n    this.params = closure(opts.params || {});\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n    this.vsn = opts.vsn || DEFAULT_VSN;\n    this.heartbeatTimer = null;\n    this.pendingHeartbeatRef = null;\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect());\n    }, this.reconnectAfterMs);\n  }\n  replaceTransport(newTransport) {\n    this.disconnect();\n    this.transport = newTransport;\n  }\n  protocol() {\n    return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n  }\n  endPointURL() {\n    let uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params()), { vsn: this.vsn });\n    if (uri.charAt(0) !== \"/\") {\n      return uri;\n    }\n    if (uri.charAt(1) === \"/\") {\n      return `${this.protocol()}:${uri}`;\n    }\n    return `${this.protocol()}://${location.host}${uri}`;\n  }\n  disconnect(callback, code, reason) {\n    this.connectClock++;\n    this.closeWasClean = true;\n    this.reconnectTimer.reset();\n    this.teardown(callback, code, reason);\n  }\n  connect(params) {\n    this.connectClock++;\n    if (params) {\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n      this.params = closure(params);\n    }\n    if (this.conn) {\n      return;\n    }\n    this.closeWasClean = false;\n    this.conn = new this.transport(this.endPointURL());\n    this.conn.binaryType = this.binaryType;\n    this.conn.timeout = this.longpollerTimeout;\n    this.conn.onopen = () => this.onConnOpen();\n    this.conn.onerror = (error) => this.onConnError(error);\n    this.conn.onmessage = (event) => this.onConnMessage(event);\n    this.conn.onclose = (event) => this.onConnClose(event);\n  }\n  log(kind, msg, data) {\n    this.logger(kind, msg, data);\n  }\n  hasLogger() {\n    return this.logger !== null;\n  }\n  onOpen(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.open.push([ref, callback]);\n    return ref;\n  }\n  onClose(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.close.push([ref, callback]);\n    return ref;\n  }\n  onError(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.error.push([ref, callback]);\n    return ref;\n  }\n  onMessage(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.message.push([ref, callback]);\n    return ref;\n  }\n  onConnOpen() {\n    if (this.hasLogger())\n      this.log(\"transport\", `connected to ${this.endPointURL()}`);\n    this.closeWasClean = false;\n    this.establishedConnections++;\n    this.flushSendBuffer();\n    this.reconnectTimer.reset();\n    this.resetHeartbeat();\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback());\n  }\n  heartbeatTimeout() {\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null;\n      if (this.hasLogger()) {\n        this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n      }\n      this.abnormalClose(\"heartbeat timeout\");\n    }\n  }\n  resetHeartbeat() {\n    if (this.conn && this.conn.skipHeartbeat) {\n      return;\n    }\n    this.pendingHeartbeatRef = null;\n    clearTimeout(this.heartbeatTimer);\n    setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n  }\n  teardown(callback, code, reason) {\n    if (!this.conn) {\n      return callback && callback();\n    }\n    this.waitForBufferDone(() => {\n      if (this.conn) {\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n      }\n      this.waitForSocketClosed(() => {\n        if (this.conn) {\n          this.conn.onclose = function() {\n          };\n          this.conn = null;\n        }\n        callback && callback();\n      });\n    });\n  }\n  waitForBufferDone(callback, tries = 1) {\n    if (tries === 5 || !this.conn || !this.conn.bufferedAmount) {\n      callback();\n      return;\n    }\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1);\n    }, 150 * tries);\n  }\n  waitForSocketClosed(callback, tries = 1) {\n    if (tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed) {\n      callback();\n      return;\n    }\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1);\n    }, 150 * tries);\n  }\n  onConnClose(event) {\n    let closeCode = event && event.code;\n    if (this.hasLogger())\n      this.log(\"transport\", \"close\", event);\n    this.triggerChanError();\n    clearTimeout(this.heartbeatTimer);\n    if (!this.closeWasClean && closeCode !== 1e3) {\n      this.reconnectTimer.scheduleTimeout();\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event));\n  }\n  onConnError(error) {\n    if (this.hasLogger())\n      this.log(\"transport\", error);\n    let transportBefore = this.transport;\n    let establishedBefore = this.establishedConnections;\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore);\n    });\n    if (transportBefore === this.transport || establishedBefore > 0) {\n      this.triggerChanError();\n    }\n  }\n  triggerChanError() {\n    this.channels.forEach((channel) => {\n      if (!(channel.isErrored() || channel.isLeaving() || channel.isClosed())) {\n        channel.trigger(CHANNEL_EVENTS.error);\n      }\n    });\n  }\n  connectionState() {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return \"connecting\";\n      case SOCKET_STATES.open:\n        return \"open\";\n      case SOCKET_STATES.closing:\n        return \"closing\";\n      default:\n        return \"closed\";\n    }\n  }\n  isConnected() {\n    return this.connectionState() === \"open\";\n  }\n  remove(channel) {\n    this.off(channel.stateChangeRefs);\n    this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n  }\n  off(refs) {\n    for (let key in this.stateChangeCallbacks) {\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1;\n      });\n    }\n  }\n  channel(topic, chanParams = {}) {\n    let chan = new Channel(topic, chanParams, this);\n    this.channels.push(chan);\n    return chan;\n  }\n  push(data) {\n    if (this.hasLogger()) {\n      let { topic, event, payload, ref, join_ref } = data;\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload);\n    }\n    if (this.isConnected()) {\n      this.encode(data, (result) => this.conn.send(result));\n    } else {\n      this.sendBuffer.push(() => this.encode(data, (result) => this.conn.send(result)));\n    }\n  }\n  makeRef() {\n    let newRef = this.ref + 1;\n    if (newRef === this.ref) {\n      this.ref = 0;\n    } else {\n      this.ref = newRef;\n    }\n    return this.ref.toString();\n  }\n  sendHeartbeat() {\n    if (this.pendingHeartbeatRef && !this.isConnected()) {\n      return;\n    }\n    this.pendingHeartbeatRef = this.makeRef();\n    this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef });\n    this.heartbeatTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs);\n  }\n  abnormalClose(reason) {\n    this.closeWasClean = false;\n    if (this.isConnected()) {\n      this.conn.close(WS_CLOSE_NORMAL, reason);\n    }\n  }\n  flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback());\n      this.sendBuffer = [];\n    }\n  }\n  onConnMessage(rawMessage) {\n    this.decode(rawMessage.data, (msg) => {\n      let { topic, event, payload, ref, join_ref } = msg;\n      if (ref && ref === this.pendingHeartbeatRef) {\n        clearTimeout(this.heartbeatTimer);\n        this.pendingHeartbeatRef = null;\n        setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n      }\n      if (this.hasLogger())\n        this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload);\n      for (let i = 0; i < this.channels.length; i++) {\n        const channel = this.channels[i];\n        if (!channel.isMember(topic, event, payload, join_ref)) {\n          continue;\n        }\n        channel.trigger(event, payload, ref, join_ref);\n      }\n      for (let i = 0; i < this.stateChangeCallbacks.message.length; i++) {\n        let [, callback] = this.stateChangeCallbacks.message[i];\n        callback(msg);\n      }\n    });\n  }\n  leaveOpenTopic(topic) {\n    let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n    if (dupChannel) {\n      if (this.hasLogger())\n        this.log(\"transport\", `leaving duplicate topic \"${topic}\"`);\n      dupChannel.leave();\n    }\n  }\n};\n//# sourceMappingURL=phoenix.cjs.js.map\n  })();\n});"]}