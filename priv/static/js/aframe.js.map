{"version":3,"sources":["aframe/aframeApp.js","aframe/cluster_view.js","aframe/components/camrender.js","aframe/components/clicktest.js","aframe/components/curve.js","aframe/components/customcontrols.js","aframe/components/debug.js","aframe/components/enterleave.js","aframe/components/logger.js","aframe/components/menu.js","aframe/components/menubutton.js","aframe/components/nodeinfo.js","aframe/config.js","aframe/graph.js","aframe/menuController.js","aframe/process.js","aframe/test.js","aframe/user_socket.js","aframe/util.js","node_modules/phoenix_html/priv/static/phoenix_html.js","node_modules/phoenix/priv/static/phoenix.cjs.js"],"names":["console","log","components","forEach","c","require","AframeApp","clusterView","ClusterView","menuController","window","socket","app","graph_container","cfg","linkColor","processes","grouping_processes","graph","Graph","channel","join","on","msg","visualizeNode","cleanupNode","spawn","exit","name","links","unlink","$","each","pids","pid","info","addProcess","update","process","node","removeProcess","Logger","logOne","from","to","addLink","logTwo","from_was_unlinked","removeInvisibleLink","to_was_unlinked","removeLink","from_any_links","addInvisibleLink","to_any_links","from_pid","to_pid","Tracer","logMessage","color","nodeMenu","nodeColors","get","THREE","Color","Process","isGroupingProcess","d3","values","maybe_unlinked_process","other_pid","id","grouping_process","invisible_links","_other_pid","other_process","linked_process","match","push","stopMsgTraceAll","AFRAME","registerComponent","schema","fps","type","cid","height","width","init","counter","canvasEl","document","getElementById","data","renderer","WebGLRenderer","antialias","canvas","setPixelRatio","devicePixelRatio","setSize","domElement","crossorigin","tick","time","timeDelta","loopFPS","hmdIsXFasterThanDesiredFPS","renderEveryNthFrame","Math","round","render","el","sceneEl","object3D","object3DMap","camera","dependencies","material","getObject3D","map","needsUpdate","addEventListener","evt","setAttribute","getAttribute","start","end","timer","done","split","n","parseFloat","x1","y1","z1","x2","y2","z2","xm","ym","zm","curve","QuadraticBezierCurve3","Vector3","points","getPoints","geometry","BufferGeometry","setFromPoints","LineBasicMaterial","opacity","curveObject","Line","dir","getTangent","normalize","mid","getPoint","arrowObject","ArrowHelper","cone","setObject3D","tock","duration","sin","PI","flushToDOM","removeAttribute","msgCone","msgCurve","remove","removeObject3D","Controls","cycleMenu","toggleMenu","activeTab","tab","tabIDs","scrollUp","scrollDown","e","key","cameraRig","speed","controllerLeft","controllerRight","self","quat","Quaternion","vecZ","vecX","axisL","axisR","trackpadPressedR","intervalID","querySelector","screenshot","capture","axis","detail","posX","posY","abs","clickEvent","CustomEvent","dispatchEvent","setTimeout","setInterval","clearInterval","pos","position","copy","quaternion","applyQuaternion","axisX","axisZ","multiplyScalar","add","set","x","getComponent","y","z","rot","rotation","line","querySelectorAll","vecz","vecx","l","setFromQuaternion","dims","getBoundingClientRect","MsgLogger","container","maxMessages","messages","Array","last","scrolling","containerHeight","containerWidth","msgPadding","msgHeight","msgWidth","wSize","floor","length","undefined","res","i","idx","xOffset","select","selectAll","getWindow","filter","d","attr","first","offset","fill","action","types","Map","Object","entries","selected","nodeContainer","Menu","scene","initVR","nodesContainer","nodeListSize","nodePadding","nodeWidth","nodeHeight","maxNodes","updateNodes","nodes","receive","enter","append","COLORS","appendColorLegend","radius","offsetY","offsetX","baseColor","supervisor","supervisorOffset","port","portOffset","createElement","getHexString","t","appendChild","nodeClick","target","args","nodeName","lol","hasClass","removeClass","addClass","noOp","nodeInfo","__data__","displayNodeInfo","collapseNode","kill","registerSystem","commands","test","addCommand","test2","listCommands","func","delCommand","run","clickable","system","systems","colorHex","highlightHex","childNodes","stopPropagation","oldData","NodeInfo","activeNode","titleField","nodeField","applField","typeField","linksField","killBtn","application","numLinks","keys","toString","ALPHA_DECAY","PID_RADIUS","INVISIBLE_LINK_STRENGTH","LINK_LENGTH","REPULSION","CENTERING_STRENGTH","cluster_view","rig","camPos","nodeList","_groups","dist","sqrt","text","firstChild","v","lookAt","linkContainer","invisibleLinkContainer","forceCenter","forceLink","distance","forceInvisibleLink","strength","forceManyBody","forceSim","forceSimulation","force","forceX","forceY","velocityDecay","alphaDecay","msgs","testFunc","sort","source","link","link_id","msg_traced","msgTracePID","force_restart","pids_list","links_list","invisible_links_list","pids_by_node","nest","nodes_list","grouping_pids_list","shit","mc","activeMenu","visible","msgTraceProcess","merge","new_invisible_links","alpha","restart","isVR","onresize","resizeTabs","reset","newParent","cloneNode","parentNode","removeChild","activeID","oldEl","newEl","indexOf","GROUPING_PID","replace","DATA","renderData","linksOLD","addNode","unshift","sim","removeNode","pop","index","ticked","Socket","params","token","userToken","connect","offsetColor","isColor","r","g","b","shifted","offsetHSL","mod","m"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA7Z,MAAM,CAAC8Z,OAAP;AACAza,OAAO,CAACC,GAAR,CAAY,wBAAZ,E,CAEA;AACA;AACA;AACA;;eAGeU,M;;;;;;;;;;;;;;;AC7Df,SAAS+Z,WAAT,CAAqBhX,KAArB,EAA0C;AAAA,MAAd0M,MAAc,uEAAL,GAAK;;AACtC,MAAI,QAAO1M,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACiX,OAAvC,EAAgD;AAC5C,QAAQC,CAAR,GAAoBlX,KAApB,CAAQkX,CAAR;AAAA,QAAWC,CAAX,GAAoBnX,KAApB,CAAWmX,CAAX;AAAA,QAAcC,CAAd,GAAoBpX,KAApB,CAAcoX,CAAd;AACA,QAAMC,OAAO,GAAG,IAAIjX,KAAK,CAACC,KAAV,CAAgB6W,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,CAAhB;AACAC,WAAO,CAACC,SAAR,CAAkB5K,MAAlB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,WAAO2K,OAAP;AACH,GALD,MAKO;AACH,WAAO,IAAIjX,KAAK,CAACC,KAAV,CAAgB,QAAhB,CAAP;AACH;AACJ,C,CACD;;;AACA,SAASkX,GAAT,CAAa/S,CAAb,EAAgBgT,CAAhB,EAAmB;AACf,SAAO,CAAEhT,CAAC,GAAGgT,CAAL,GAAUA,CAAX,IAAgBA,CAAvB;AACH;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"../priv/static/js/aframe.js","sourcesContent":["console.log(\"loading aframe app\");\r\n\r\n// const fs = require('fs');\r\n\r\n// function loadComponents() {\r\n//     const path = './components';\r\n//     let files = fs.readdirSync(path).filter(file => file.endsWith('.js'));\r\n//     console.log(files)\r\n// }\r\n\r\nimport \"phoenix_html\";\r\nimport socket from \"./user_socket.js\";\r\nimport Menu from \"./components/menu.js\";\r\nimport ClusterView from \"./cluster_view.js\";\r\nimport menuController from \"./menuController.js\";\r\nimport Controls from \"./components/customcontrols.js\";\r\n\r\n//window.socket.channel(\"nodes\", {}).join().receive(\"ok\", () => console.log('FRFRFRF'));\r\n// temp fix\r\nconst components = ['clicktest.js', 'customcontrols.js', 'debug.js', 'enterleave.js',\r\n 'menubutton.js', 'menu.js', 'camrender.js', 'nodeinfo.js', 'logger.js', 'curve.js'];\r\ncomponents.forEach(c => {\r\n    console.log('importing ', c);\r\n    require(`./components/${c}`);\r\n});\r\n\r\nclass AframeApp {\r\n    constructor() {\r\n        //this.controls = new Controls(); //callbacks for keyboard presses and vr controllers\r\n        //this.menu = new Menu();\r\n        this.clusterView = new ClusterView('NOT USED');// TODO it is used ig lol\r\n        //this.menu = new Menu();\r\n        this.menuController = new menuController();\r\n    }\r\n}\r\n// on document load\r\n// $(() => {\r\n//     window.socket = socket;\r\n//     console.log('SOCKET LOADED')\r\n//     window.app = new AframeApp();\r\n// })\r\n\r\n(() => {\r\n    window.socket = socket;\r\n    console.log('SOCKET LOADED')\r\n    window.app = new AframeApp();\r\n})()\r\n//import './test.js';\r\n\r\n","import Graph from './graph.js';\r\nimport Process from './process.js';\r\nimport { shiftColor } from './util.js';\r\nimport cfg from './config';\r\n\r\nexport default class {\r\n    constructor(graph_container) {\r\n        console.log('CLUSTER CLASS loaded')\r\n        console.log('CFG', cfg)\r\n        console.log(cfg.linkColor)\r\n        this.processes = {};\r\n        this.grouping_processes = {};\r\n        //this.nodes = 0; //active nodes, used to assign each a different color\r\n\r\n        this.graph = new Graph(graph_container, this);\r\n\r\n        this.channel = window.socket.channel('trace', {});\r\n        this.channel.join();\r\n\r\n        this.channel.on('visualize_node', msg => this.visualizeNode(msg));\r\n        this.channel.on('cleanup_node', msg => this.cleanupNode(msg));\r\n        this.channel.on('spawn', msg => this.spawn(msg));\r\n        this.channel.on('exit', msg => this.exit(msg));\r\n        this.channel.on('name', msg => this.name(msg));\r\n        this.channel.on('links', msg => this.links(msg));\r\n        this.channel.on('unlink', msg => this.unlink(msg));\r\n        this.channel.on('msg', msg => this.msg(msg));\r\n    }\r\n\r\n    visualizeNode(msg) {\r\n        console.log('VISUALIZEEEE ', msg);\r\n        $.each(msg.pids, (pid, info) => this.addProcess(pid, info));\r\n        //this.nodes++;\r\n        this.graph.update(true);\r\n    }\r\n\r\n    cleanupNode(msg) {\r\n        console.log('cleanup node');\r\n        //delete all processes from node\r\n        $.each(this.processes, (pid, process) => {\r\n            if (process.node == msg.node) {\r\n                this.removeProcess(pid);\r\n            }\r\n        });\r\n        delete this.grouping_processes[msg.node];\r\n        this.graph.update(true); //no reload if false?\r\n    }\r\n\r\n    spawn(msg) {\r\n        $.each(msg, (pid, info) => {\r\n            this.addProcess(pid, info);\r\n            // might need null check idk TODO yes it does lol\r\n            window.app.Logger?.logOne(this.processes[pid], 'spawn');\r\n        });\r\n        this.graph.update(true);\r\n    }\r\n\r\n    exit(msg) {\r\n        if (this.processes[msg.pid]) {\r\n            window.app.Logger?.logOne(this.processes[msg.pid], 'exit');\r\n            this.removeProcess(msg.pid);\r\n            this.graph.update(true);\r\n        }\r\n    }\r\n\r\n    name(msg) {\r\n        console.log('name')\r\n    }\r\n\r\n    links(msg) {\r\n        let from = this.processes[msg.from],\r\n            to = this.processes[msg.to];\r\n\r\n        if (from && to) {\r\n            this.addLink(from, to);\r\n            window.app.Logger?.logTwo(from, to, 'link');\r\n            // from was unlinked so had an invisible link\r\n            if (!msg.from_was_unlinked)\r\n                this.removeInvisibleLink(from);\r\n\r\n            if (!msg.to_was_unlinked)\r\n                this.removeInvisibleLink(to);\r\n\r\n            this.graph.update(true);\r\n        }\r\n    }\r\n\r\n    unlink(msg) {\r\n        let from = this.processes[msg.from],\r\n            to = this.processes[msg.to];\r\n\r\n        if (from && to) {\r\n            this.graph.removeLink(from, to); //TODO\r\n            window.app.Logger?.logTwo(from, to, 'unlink');\r\n            // from now has no links, add invisible link\r\n            if (!msg.from_any_links)\r\n                this.addInvisibleLink(from);\r\n\r\n            if (!msg.to_any_links)\r\n                this.addInvisibleLink(to);\r\n\r\n            this.graph.update(true);\r\n        }\r\n    }\r\n\r\n    msg(msg) {\r\n        // incoming msgs from traced processes\r\n        let from = this.processes[msg.from_pid],\r\n            to = this.processes[msg.to_pid]; // why tf different here lol\r\n\r\n        window.app.Tracer?.logMessage(from, to, msg.msg);\r\n\r\n        //TODO shit from 2D needed here??\r\n    }\r\n\r\n    addProcess(pid, info) {\r\n        if (this.processes[pid]) return; //exists\r\n\r\n        //let color = cfg.COLORS[this.nodes % cfg.COLORS.length];\r\n        let color = window.app.menuController.nodeMenu.nodeColors.get(info.node);\r\n        info.color = new THREE.Color(color);\r\n        let process = this.processes[pid] = new Process(pid, info);\r\n\r\n        // 1 grouping process per node\r\n        if (process.isGroupingProcess()) {\r\n            this.grouping_processes[process.node] = process;\r\n            console.log(process)\r\n\r\n            // since this is the first time the grouping process has been seen, go through all processes and create invisble links\r\n            d3.values(this.processes).forEach(maybe_unlinked_process => {\r\n                if (!maybe_unlinked_process.isGroupingProcess()) {\r\n                    this.addInvisibleLink(maybe_unlinked_process);\r\n                }\r\n            });\r\n        } else {\r\n            this.addInvisibleLink(process);\r\n        }\r\n        info.links.forEach(other_pid => this.addLink(process, this.processes[other_pid]));\r\n    }\r\n\r\n    addLink(from, to) {\r\n        if (from && to) {\r\n            from.links[to.id] = to;\r\n            to.links[from.id] = from;\r\n            this.graph.addLink(from, to);\r\n        }\r\n    }\r\n\r\n    // if grouping process not yet seen, skip\r\n    // grouping p seen -> add all skipped nodes\r\n    // each node afterwards will be added right away\r\n    // FIX LE EPIC EXPLANATION lol\r\n    addInvisibleLink(process) {\r\n        // 1 per node name\r\n        let grouping_process = this.grouping_processes[process.node];\r\n        if (grouping_process) {\r\n            // process was added before\r\n            grouping_process.invisible_links[process.id] = process;\r\n            this.graph.addInvisibleLink(grouping_process, process);\r\n        }\r\n        // not yet seen, skip and add later..\r\n    }\r\n\r\n    removeInvisibleLink(process) {\r\n        let grouping_processes = this.grouping_processes[process.node];\r\n\r\n        if (grouping_processes) {\r\n            delete grouping_processes.invisible_links[process.id];\r\n            this.graph.removeInvisibleLink(grouping_processes, process);\r\n        }\r\n    }\r\n\r\n    removeProcess(pid) {\r\n        if (!this.processes[pid]) {\r\n            console.log('tried to remove unknown process', pid);\r\n            return;\r\n        }\r\n        let process = this.processes[pid];\r\n        $.each(process.links, (_other_pid, other_process) => delete other_process.links[pid]);\r\n        this.removeInvisibleLink(process);\r\n        //difference between ↑ ↓ ? dafuq\r\n        d3.values(process.links).forEach(linked_process => {\r\n            delete linked_process.links[pid];\r\n\r\n            //when a process exits, its linked ports also exit\r\n            if (linked_process.id.match(/#Port<[\\d\\.]+>/)) {\r\n                delete this.processes[linked_process.id];\r\n            }\r\n        });\r\n        this.graph.removeProcess(process);\r\n        delete this.processes[pid];\r\n    }\r\n\r\n    msgTracePID(id) {\r\n        console.log('tracing: ', id);\r\n        this.channel.push('msg_trace', id);\r\n    }\r\n\r\n    stopMsgTraceAll(node) {\r\n        console.log('stop msg tracing');\r\n        this.channel.push('stop_msg_trace_all', node);\r\n        this.graph.stopMsgTraceAll();\r\n        this.graph.update(false);\r\n    }\r\n    // TODO probs remove this shit no worky\r\n    collapseNode(pid) {\r\n        // not gonna work with menu button component\r\n        // dont implement or use graph onclick instead..\r\n        console.log('nothing yet');\r\n    }\r\n}","//https://jgbarah.github.io/aframe-playground/camrender-01/\r\nAFRAME.registerComponent('camrender', {\r\n    schema: {\r\n        fps: {\r\n            type: 'number',\r\n            default: 90.0\r\n        },\r\n        cid: {\r\n            type: 'string',\r\n            default: 'camRenderer'\r\n        },\r\n        height: {\r\n            type: 'number',\r\n            default: 300\r\n        },\r\n        width: {\r\n            type: 'number',\r\n            default: 400\r\n        }\r\n    },\r\n\r\n    init: function() {\r\n        console.log('INIT CAM2');\r\n        // Counter for ticks since last render\r\n        this.counter = 0;\r\n        // Find canvas element to be used for rendering\r\n        let canvasEl = document.getElementById(this.data.cid);\r\n        // Create renderer\r\n        this.renderer = new THREE.WebGLRenderer( { antialias: true, canvas: canvasEl } );\r\n        this.renderer.setPixelRatio( window.devicePixelRatio );\r\n        this.renderer.setSize( this.data.width, this.data.height );\r\n        // Set properties for renderer DOM element\r\n        this.renderer.domElement.crossorigin = \"anonymous\"\r\n        this.renderer.domElement.height = this.data.height;\r\n        this.renderer.domElement.width = this.data.width;\r\n    },\r\n\r\n    tick: function(time, timeDelta) {\r\n        let loopFPS = 1000.0 / timeDelta;\r\n        let hmdIsXFasterThanDesiredFPS = loopFPS / this.data.fps;\r\n        let renderEveryNthFrame = Math.round(hmdIsXFasterThanDesiredFPS);\r\n        if(this.counter % renderEveryNthFrame === 0){\r\n            this.renderer.render( this.el.sceneEl.object3D , this.el.object3DMap.camera );\r\n            }\r\n        this.counter += 1;\r\n    },\r\n});\r\n\r\nAFRAME.registerComponent('canvas-updater', {\r\n    dependencies: ['geometry', 'material'],\r\n\r\n    tick: function () {\r\n\t    let el = this.el;\r\n\t    let material;\r\n\t    material = el.getObject3D('mesh').material;\r\n\t    if (!material.map) { return; }\r\n        material.map.needsUpdate = true;\r\n    }\r\n});","\r\nAFRAME.registerComponent('clicktest', {\r\n    init: function () {\r\n        console.log('CLICK INIT');\r\n        var el = this.el;\r\n        el.addEventListener('click', evt => {\r\n            console.log(el);\r\n            console.log('trigger pressed');\r\n            el.setAttribute('visible', !el.getAttribute('visible'));\r\n        });\r\n    }\r\n})","// le epic test\r\nAFRAME.registerComponent('curve', {\r\n    schema: {\r\n        start: { type: 'string', default: '0 0 0' },\r\n        end: { type: 'string', default: '1 1 1' }\r\n    },\r\n\r\n    init: function () {\r\n        this.timer = 0;\r\n        this.done = false;\r\n        const [x1, y1, z1] = this.data.start.split(' ').map(n => parseFloat(n));\r\n        const [x2, y2, z2] = this.data.end.split(' ').map(n => parseFloat(n));\r\n        const [xm, ym, zm] = [(x1 + x2) / 2, (y1 + y2) / 2, (z1 + z2) / 2];\r\n\r\n        const curve = new THREE.QuadraticBezierCurve3(\r\n            new THREE.Vector3(x1, y1, z1),\r\n            new THREE.Vector3(xm, ym + 3, zm), //const to make line curve upwards\r\n            new THREE.Vector3(x2, y2, z2)\r\n        );\r\n\r\n        const points = curve.getPoints(50);\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        const material = new THREE.LineBasicMaterial({\r\n            color: 0xff0000,\r\n            opacity: 0\r\n        });\r\n        //object to add to the scene\r\n        const curveObject = new THREE.Line(geometry, material);\r\n\r\n        //direction cone\r\n        const dir = curve.getTangent(0.5).normalize(); // range [0,1] -> middle of curve\r\n        const mid = curve.getPoint(0.5);\r\n        console.log('tangent:', dir, 'idk', mid);\r\n        const arrowObject = new THREE.ArrowHelper(dir, mid, 0, 0xff0000, 0.8, 0.5);\r\n        arrowObject.cone.material.opacity = 0.2;\r\n\r\n        this.el.setObject3D('msgCone', arrowObject);\r\n        this.el.setObject3D('msgCurve', curveObject);\r\n    },\r\n    //tock called after scene has rendered\r\n    tock: function (time, timeDelta) {\r\n        const duration = 1000; // milliseconds \r\n        //if (time < 5000) return;\r\n        this.timer += timeDelta;\r\n        // function was sometimes called after element was removed from DOM\r\n        if (this.done) return;\r\n        \r\n        //let opacity = this.timer / duration;\r\n        let opacity = Math.sin((this.timer / duration) * Math.PI);\r\n        if (this.timer > duration) {\r\n            this.el.flushToDOM(); //TODO not needed anymore ig\r\n            this.el.removeAttribute('curve'); \r\n            this.done = true;\r\n            return;\r\n        }\r\n        const { msgCone, msgCurve} = this.el.object3DMap;\r\n        msgCurve.material.opacity = opacity;\r\n        msgCone.cone.material.opacity = opacity;\r\n    },\r\n\r\n    remove: function () {\r\n        this.el.removeObject3D('msgCone');\r\n        this.el.removeObject3D('msgCurve');\r\n    }\r\n});\r\n","export default class Controls {\r\n\r\n    static cycleMenu() {\r\n        window.app.menuController.cycleMenu();\r\n    }\r\n\r\n    static toggleMenu() {\r\n        window.app.menuController.toggleMenu();\r\n    }\r\n\r\n    static scrollUp() {\r\n        // check active window first\r\n        const activeTab = window.app.menuController.activeTab;\r\n        const tab = window.app.menuController.tabIDs[activeTab];\r\n        switch (tab) {\r\n            case '#logger-info':\r\n                window.app.Logger.scrollUp();\r\n                break;\r\n            case '#logger-trace':\r\n                window.app.Tracer.scrollUp();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    static scrollDown() {\r\n        const activeTab = window.app.menuController.activeTab;\r\n        const tab = window.app.menuController.tabIDs[activeTab];\r\n        switch (tab) {\r\n            case '#logger-info':\r\n                window.app.Logger.scrollDown();\r\n                break;\r\n            case '#logger-trace':\r\n                window.app.Tracer.scrollDown();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nwindow.addEventListener('keydown', function (e) {\r\n    //console.log(e.key);\r\n    switch (e.key) {\r\n        case 'm':\r\n            Controls.toggleMenu();\r\n            break;\r\n        case 'r':\r\n            Controls.cycleMenu();\r\n            break;\r\n        case 'i':\r\n            Controls.scrollUp();\r\n            break;\r\n        case 'k':\r\n            Controls.scrollDown();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n})\r\n\r\n\r\nAFRAME.registerComponent('custom-controls', {\r\n    schema: {\r\n        cameraRig: { type: 'selector', default: '#cameraRig' },\r\n        camera: { type: 'selector', default: '#camera' },\r\n        speed: { type: 'number', default: 0.1 },\r\n        controllerLeft: { 'type': 'selector', default: '#controllerLeft' },\r\n        controllerRight: { 'type': 'selector', default: '#controllerRight' }\r\n    },\r\n\r\n    init: function () {\r\n        console.log('custom controls loaded');\r\n        const el = this.el; //TODO idk if needed\r\n        const self = this;\r\n        this.timer = 0;\r\n        this.quat = new THREE.Quaternion();\r\n        this.vecZ = new THREE.Vector3(0, 0, -1); //forward direction of camera -z\r\n        this.vecX = new THREE.Vector3(1, 0, 0); // x axis for sideways movement\r\n        this.axisL = [0, 0]; //controller trackpad x,z axis\r\n        this.axisR = [0, 0];\r\n        this.trackpadPressedR = false;\r\n        this.intervalID = null; // scrolling interval id\r\n\r\n        // controller events\r\n        // trigger\r\n        // dont use triggers for clicking, raycaster fires click event\r\n        // also wont click non vr\r\n        controllerLeft.addEventListener('triggerdown', evt => {\r\n            console.log('LEFT TRIGGER');\r\n            //console.log(evt)\r\n            // could differentiate between left/right controller..\r\n            // for now just using click event..\r\n            //\r\n            // on click check intersection\r\n            // fire left/right click event on intersected el..?\r\n        });\r\n        controllerRight.addEventListener('triggerdown', evt => {\r\n            console.log('RIGHT TRIGGER');\r\n        });\r\n\r\n        // grip button\r\n        controllerLeft.addEventListener('gripdown', evt => {\r\n            console.log('LEFT GRIP');\r\n            // cycle controller mode and show popup thingy..\r\n            // HMM ??\r\n            // doesnt work non vr.. \r\n        });\r\n\r\n        controllerRight.addEventListener('gripdown', evt => {\r\n            console.log('RIGHT GRIP');\r\n            Controls.cycleMenu();\r\n            //window.app.menuController.cycleMenu(); // added to class\r\n            // diff between left and right menus idk\r\n        });\r\n\r\n        // menu button\r\n        controllerLeft.addEventListener('menudown', evt => {\r\n            console.log('LEFT MENU');\r\n            // toggle mode or some shit\r\n            document.querySelector('a-scene').components.screenshot.capture('perspective');\r\n        });\r\n\r\n        controllerRight.addEventListener('menudown', evt => {\r\n            console.log('RIGHT MENU');\r\n            // call this.somefunction toggle menu idk\r\n\r\n            //get active tab id, cycle to next on side grip etc\r\n            Controls.toggleMenu();\r\n        });\r\n\r\n        // trackpad\r\n        controllerLeft.addEventListener('axismove', evt => {\r\n            // position on trackpad, x,z values [-1,1]\r\n            // TODO just yeet this.axis = evt...\r\n            const axis = evt.detail.axis;\r\n            this.axisL = axis;\r\n        });\r\n\r\n        controllerRight.addEventListener('axismove', evt => {\r\n            const axis = evt.detail.axis;\r\n            this.axisR = axis;\r\n        });\r\n        // right trackpad: use click and axis location to create arrow key functionality?.. for.. something..\r\n        // can be different depending on active menu tab\r\n        controllerRight.addEventListener('trackpaddown', evt => {\r\n            // trackpad position not available in this event\r\n            this.trackpadPressedR = true;\r\n            console.log(this.axisR);\r\n            const posX = this.axisR[0];\r\n            const posY = this.axisR[1];\r\n            if (posX == 0 && posY == 0) return; //position not updated when clicking fast\r\n            let type;\r\n\r\n            if (Math.abs(posX) < 0.4 && Math.abs(posY) < 0.4) {\r\n                type = 'middle';\r\n            } else {\r\n                if (Math.abs(posX) > Math.abs(posY)) {\r\n                    //left or right\r\n                    (posX > 0) ? type = 'right' : type = 'left';\r\n                } else {\r\n                    // up or down\r\n                    (posY > 0) ? type = 'up' : type = 'down';\r\n                }\r\n            }\r\n            const clickEvent = new CustomEvent('trackpadclick', { detail: type });\r\n            controllerRight.dispatchEvent(clickEvent);\r\n            //test\r\n            this.intervalID = setTimeout(() => {\r\n                if (this.trackpadPressedR) {\r\n                    console.log('starting auto scroll');\r\n                    this.intervalID = setInterval(() => controllerRight.dispatchEvent(clickEvent), 50);\r\n                }\r\n            }, 1000);\r\n        });\r\n\r\n        // set timeout for auto scroll\r\n        // on let go: cancel timeout\r\n        // if fired: cancel interval\r\n\r\n        controllerRight.addEventListener('trackpadup', evt => {\r\n            this.trackpadPressedR = false;\r\n            console.log('stop scrolling');\r\n            clearInterval(this.intervalID); // also clears timeout if not reached yet\r\n        })\r\n\r\n        controllerRight.addEventListener('trackpadclick', evt => {\r\n            console.log('detail: ', evt.detail);\r\n            switch (evt.detail) {\r\n                case 'up':\r\n                    Controls.scrollUp();\r\n                    break;\r\n                case 'down':\r\n                    Controls.scrollDown();\r\n                    break;\r\n                case 'left':\r\n\r\n                    break;\r\n                case 'right':\r\n\r\n                    break;\r\n                case 'middle':\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    },\r\n\r\n    tick: function (time, timeDelta) {\r\n        //console.log(this.axis); // TODO test if axis resets to 0,0 on release, then return here ig\r\n        const vecX = this.vecX;\r\n        const vecZ = this.vecZ;\r\n\r\n        const pos = this.data.cameraRig.object3D.position;\r\n        // camera rotation quaternion\r\n        this.quat.copy(this.data.camera.object3D.quaternion);\r\n        //apply to direction vectors\r\n        vecZ.applyQuaternion(this.quat);\r\n        vecX.applyQuaternion(this.quat);\r\n\r\n        // scale vecs with speed scalar, add to position..\r\n        const axis = this.axisL;\r\n        const axisX = axis[0] * this.data.speed;\r\n        const axisZ = axis[1] * this.data.speed;\r\n        // length 1\r\n        vecZ.normalize();\r\n        vecX.normalize();\r\n        // closer to edge of trackpad = faster\r\n        vecZ.multiplyScalar(axisZ);\r\n        vecX.multiplyScalar(axisX);\r\n\r\n        pos.add(vecZ);\r\n        // add x and z component of vecX to position: only vecZ changes height\r\n        this.data.cameraRig.object3D.position.set(pos.x + vecX.getComponent(0), pos.y, pos.z + vecX.getComponent(2));\r\n        // reset NEEDED?\r\n        this.vecZ.set(0, 0, -1);\r\n        this.vecX.set(1, 0, 0);\r\n    }\r\n});","console.log('more bullshit');\r\nAFRAME.registerComponent('testing', {\r\n    schema: {\r\n        cameraRig: { type: 'selector', default: '#cameraRig' },\r\n        camera: { type: 'selector', default: '#camera' }\r\n    },\r\n    init: function () {\r\n        console.log('testing component loaded');\r\n        this.timer = 0;\r\n    },\r\n    tick: function (time, timeDelta) {\r\n        this.timer += timeDelta\r\n        if (this.timer > 1000) {\r\n            this.timer = 0\r\n            //console.log('log test')\r\n            //TEST\r\n            const rot = this.data.camera.object3D.rotation;\r\n            const quat = this.data.camera.object3D.quaternion;\r\n\r\n            const line = document.querySelectorAll('#LINE');\r\n            var vecz = new THREE.Vector3(0, 0, -1);\r\n            var vecx = new THREE.Vector3(1, 0, 0);\r\n            vecx.applyQuaternion(quat); //cam rotation\r\n            vecz.applyQuaternion(quat);\r\n            line.forEach(l => {\r\n                l.object3D.rotation.setFromQuaternion(quat);\r\n            });\r\n            //var currentPos = this.data.cameraRig.object3D.position;\r\n            //currentPos.add(vecz);\r\n            //console.log(this.data.cameraRig.object3D.position, currentPos);\r\n            \r\n\r\n            //rando test\r\n            //add 1.6 to height before pointing\r\n            //maybe fixed x/z rotation..\r\n           // document.querySelector('#POINTER').object3D.lookAt(document.querySelector('#cameraRig').object3D.position);\r\n        }\r\n    }\r\n});","// component needed?\r\nAFRAME.registerComponent('enterleave', {\r\n    init: function () {\r\n        var el = this.el;\r\n        console.log(this.el);\r\n        console.log('enter/leave');\r\n        el.addEventListener('enterleave', function (evt) {\r\n            console.log('(╯°□°）╯︵ ┻━┻')\r\n        })\r\n    }\r\n})","import cfg from '../config';\r\nimport { mod } from '../util'\r\n// logs status messages\r\n// TODO rename other menu tabs to ..-tab\r\nAFRAME.registerComponent('logger-tab', {\r\n    dependencies: ['geometry'],\r\n    init: function () {\r\n        const dims = document.querySelector('a-scene').getBoundingClientRect();\r\n        const el = document.querySelector('#logger-info');\r\n        //el.setAttribute('position', `${dims.x, }`);\r\n        window.app.Logger = new Logger(el);\r\n    }\r\n});\r\n// logs node communication\r\nAFRAME.registerComponent('tracer-tab', {\r\n    dependencies: ['geometry'],\r\n    init: function () {\r\n        console.log('LOADED TRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACER');\r\n        const dims = document.querySelector('a-scene').getBoundingClientRect();\r\n        const el = document.querySelector('#logger-trace');\r\n        window.app.Tracer = new Tracer(el);\r\n    }\r\n});\r\n\r\n// add some color shite..\r\nAFRAME.registerComponent('selected', {\r\n\r\n});\r\n\r\n// logger just adds string to tab idk\r\n// string generated by subclass method\r\n\r\nexport class MsgLogger {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.maxMessages = cfg.maxMessages;\r\n        this.messages = new Array(this.maxMessages); //circular array\r\n        this.last = -1; //idx of last added msg\r\n        this.window = -1; // start of visible window\r\n        this.scrolling = false;\r\n\r\n        // sliding window type shit\r\n        // use window and size to slice msgs from array\r\n\r\n        // TODO\r\n        this.containerHeight = container.getAttribute('geometry').height;\r\n        this.containerWidth = container.getAttribute('geometry').width;\r\n        // msg config\r\n        this.msgPadding = 0.02;\r\n        this.msgHeight = cfg.msgHeight;\r\n        this.msgWidth = this.containerWidth - this.msgPadding;\r\n        // # of messages displayed\r\n        this.wSize = Math.floor(this.containerHeight / (this.msgHeight + this.msgPadding));\r\n        console.log(this.wSize);\r\n    }\r\n\r\n    scrollUp() {\r\n        // cant sroll up when nothing added yet or window at top\r\n        if (this.last < 0 || this.window == this.last) {\r\n            console.log('at top');\r\n            return;\r\n        }\r\n        this.window = mod((this.window + 1), this.messages.length);\r\n        if (this.window == this.last) {\r\n            // back to top\r\n            this.scrolling = false;\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    scrollDown() {\r\n        if (this.last < 0) return;\r\n        // window is at bottom\r\n        if (mod((this.window - this.wSize), this.messages.length) == this.last\r\n            || this.messages[mod((this.window - 1), this.messages.length)] == undefined) {\r\n            console.log('at end');\r\n            return;\r\n        }\r\n        this.window = mod((this.window - 1), this.messages.length);\r\n        this.scrolling = true;\r\n\r\n        this.render();\r\n    }\r\n\r\n    addMsg(msg) {\r\n        this.last += 1;\r\n        const l = this.messages.length;\r\n        if (this.last == l) this.last = 0;\r\n        this.messages[this.last] = msg; // will overide oldest msg if full\r\n        // check if scrolling.. add explanation lol TODO\r\n\r\n        if (!this.scrolling \r\n            || (this.scrolling && (mod(this.last-1, l) == mod((this.window - this.wSize), l)))) {\r\n            console.log('moving window');\r\n            this.window = mod((this.window + 1), l);\r\n        } // else dont move -> scrolling\r\n\r\n        // rerender\r\n        this.render();\r\n    }\r\n    \r\n    getWindow() {\r\n        const start = this.window;\r\n        let res = new Array(this.wSize);\r\n        // cant use slice here, index wraps around\r\n        for (let i = 0; i < this.wSize; i++) {\r\n            let idx = mod(start - i, this.messages.length);\r\n            res[i] = this.messages[idx];\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() { // TODO maybe add scrollbar (visual only)\r\n        const xOffset = -this.msgWidth / 2 + this.msgPadding;\r\n        // add messages in window to container\r\n\r\n        d3.select('a-scene').select('#' + this.container.id)\r\n            .selectAll('a-entity')\r\n            .data(this.getWindow())\r\n            //.join('a-entity')\r\n            .join('a-entity')\r\n            .filter(function (d, i) {\r\n                return d != undefined;\r\n            })\r\n            .attr('geometry', (d, i) => {\r\n                return `primitive: plane; width: ${this.msgWidth}; height: ${this.msgHeight}`;\r\n            })\r\n            .attr('position', (d, i) => {\r\n                let first = (this.containerHeight / 2) - (this.msgHeight / 2) - this.msgPadding;\r\n                let offset = (this.msgHeight + this.msgPadding) * -i;\r\n                return `0 ${first + offset} 0.01`;\r\n            })\r\n            .attr('material', (d, i) => {\r\n                return 'shader: flat; color: red'; //TODO temp color\r\n            })// undefined test also probs\r\n            .attr('text', (d, i) => { // test wrapCount and width..\r\n                return `value: ${d}; align: left; color: white; anchor: align; xOffset: ${xOffset}`;\r\n            });\r\n    }\r\n\r\n    reset() {\r\n        this.messages.fill(undefined);\r\n        d3.select('a-scene').select('#' + this.container.id)\r\n            .selectAll('a-entity').remove();\r\n        this.last = -1;\r\n        this.window = -1;\r\n        this.scrolling = false;\r\n    }\r\n}\r\n// log one / 2\r\nexport class Logger extends MsgLogger {\r\n    // all nodes\r\n    static types = new Map(\r\n        Object.entries({\r\n            'spawn': 'spawned on',\r\n            'exit': 'exited on',\r\n            'link': 'linked with',\r\n            'unlink': 'unlinked from'\r\n        })\r\n    );\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n\r\n    // render() {\r\n    //     super.render();\r\n    // }\r\n\r\n    logOne(process, type) {\r\n        const name = process.name;\r\n        const action = Logger.types.get(type);\r\n        const node = process.node;\r\n        console.log(name, action, node);\r\n        super.addMsg(`${name} ${action} ${node}`);\r\n    }\r\n\r\n    logTwo(from, to, type) {\r\n        //console.log(from.name, Logger.types.get(type), to.name);\r\n        const action = Logger.types.get(type);\r\n        super.addMsg(`${from.name} ${action} ${to.name}`);\r\n    }\r\n}\r\n// log 2\r\nexport class Tracer extends MsgLogger {\r\n    // selected nodes\r\n    constructor(container) {\r\n        super(container);\r\n        this.selected = new Map(); // idk map maybe.. TODO not needed\r\n        this.nodeContainer = document.querySelector('#d3-nodes'); // parent of msg arrow elements\r\n    }\r\n\r\n    logMessage(from, to, msg) {\r\n        const { x: x1, y: z1 } = from;\r\n        const { x: x2, y: z2 } = to;\r\n        this.nodeContainer.setAttribute('curve', `start: ${x1} 0 ${z1}; end: ${x2} 0 ${z2}`);\r\n        console.log(from.name + '->' + to.name + ': ' + msg);\r\n        super.addMsg(from.name + '->' + to.name + ': ' + msg);\r\n    }\r\n    // this shite even needed?\r\n    // dont need to store traced nodes here..\r\n    // selecting done in graph onclick\r\n    select() { // traced component..\r\n\r\n    }\r\n\r\n    remove() {\r\n\r\n    }\r\n}","import cfg from '../config';\r\nimport { offsetColor } from '../util';\r\n\r\nAFRAME.registerComponent('menu', {\r\n    dependencies: ['geometry'],\r\n    init: function () {\r\n        console.log('menu init');\r\n        //let t = new Menu();\r\n        window.app.menuController.nodeMenu = new Menu();\r\n        //load menuController here? idk consistency\r\n        const scene = document.querySelector('a-scene');\r\n\r\n        scene.addEventListener('enter-vr', function () {\r\n            console.log(\"ENTERED VR\");\r\n            window.app.menuController.initVR();\r\n        });\r\n\r\n        // scene.addEventListener('exit-vr', function () {\r\n        //     window.app.menuController.exitVR();\r\n        // })\r\n\r\n    }\r\n});\r\n\r\n\r\nexport default class Menu {\r\n    constructor() {\r\n        console.log(\"MENU LOADED\")\r\n        //TODO: scroll button when #nodes > max\r\n        this.nodesContainer = document.querySelector('a-scene #menu-nodes');\r\n        console.log('CONTAINER: ', this.nodesContainer);\r\n        console.log(window.socket)\r\n        console.log(this.nodesContainer.getAttribute('geometry'));\r\n        this.containerHeight = this.nodesContainer.getAttribute('geometry').height;\r\n        this.containerWidth = this.nodesContainer.getAttribute('geometry').width;\r\n        this.channel = window.socket.channel(\"nodes\", {});\r\n        this.nodeColors = new Map();\r\n        this.nodeListSize = 3; //max visible nodes in the menu list at once\r\n        this.nodePadding = 0.05; //test\r\n        this.nodeWidth = this.containerWidth - this.nodePadding;\r\n        this.nodeHeight = 0.2;\r\n        this.maxNodes = Math.floor(this.containerHeight / (this.nodeHeight + this.nodePadding));\r\n        console.log( //TODO maxNodes is unused lol\r\n            'container height: ', this.containerHeight,\r\n            '\\nnode height+padding: ', this.nodeHeight + this.nodePadding,\r\n            '\\nmax #nodes -> ', this.maxNodes\r\n        )\r\n\r\n        let updateNodes = msg => {\r\n            //update this.nodes here idk, for scroll shit.. eventually..\r\n            this.update(msg.nodes);\r\n        };\r\n\r\n        this.channel.join().receive(\"ok\", updateNodes);\r\n        // update msg callback\r\n        this.channel.on(\"update\", updateNodes);\r\n    }\r\n\r\n    update(nodes) {\r\n        console.log('updating nodes: ', nodes);\r\n        const l = nodes.length;\r\n        const self = this;\r\n\r\n        //d3\r\n        d3.select('a-scene').select('#menu-nodes')\r\n            .selectAll('a-entity')\r\n            .data(nodes)\r\n            .join(\r\n                enter => {\r\n                    enter\r\n                        .append('a-entity')\r\n                        .attr('geometry', (d, i) => {\r\n                            console.log('HERE HERE HERE');\r\n                            return `primitive: plane; width: ${this.nodeWidth}; height: ${this.nodeHeight};`\r\n                        })\r\n                        .attr('position', (d, i) => {\r\n                            console.log((this.containerHeight / 2) - (this.nodeHeight / 2));\r\n                            let first = (this.containerHeight / 2) - (this.nodeHeight / 2) - this.nodePadding;\r\n                            let offset = (this.nodeHeight + this.nodePadding) * -i;\r\n                            return `0 ${first + offset} 0.01`\r\n                        })\r\n                        .attr('material', (d, i) => {\r\n                            return 'shader: flat; color: red'\r\n                        })\r\n                        .attr('text', (d, i) => {\r\n                            //??split node string at @ idk\r\n                            return `value: ${d}; align: center; wrapCount: 20`\r\n                        })\r\n                        .attr('menu-button', (d, i) => `name: nodeClick; args: ${d}; clickable: true`)\r\n                        //.attr('raycastable', (d, i) => '')\r\n                        .each(function (d, i) {\r\n                            self.nodeColors.set(d, cfg.COLORS[i % cfg.COLORS.length]);\r\n                            self.appendColorLegend(this, d);\r\n                            // update DOM with correct attribute values\r\n                            // TODO needed?\r\n                            this.flushToDOM();\r\n                            console.log('flushed: ', this);\r\n                            console.log(d);\r\n                        });\r\n                },\r\n                update => {\r\n                    console.log('UPDATEDARAUPDATAUPDATEDAUPTEUPDA');\r\n                    return update;\r\n                },\r\n                exit => {\r\n                    console.log('ADADADADADADADADADADADADADADADADA');\r\n                    exit.remove();\r\n                }\r\n            );\r\n    }\r\n\r\n    visualizeNode(node) {\r\n        console.log('visualize callback');\r\n        this.channel.push('visualize', node);\r\n    }\r\n\r\n    cleanupNode(node) {\r\n        console.log('cleanup callback')\r\n    }\r\n\r\n    appendColorLegend(node, key) {\r\n        console.log(node)\r\n        let radius = (this.nodeHeight / 3) / 2; //3 node types\r\n        let offsetY = this.nodeHeight / 2;\r\n        let offsetX = (this.nodeWidth / 2) + radius;\r\n\r\n        let baseColor = new THREE.Color(this.nodeColors.get(key));\r\n        let values = {\r\n            process: baseColor,\r\n            supervisor: offsetColor(baseColor, cfg.supervisorOffset),\r\n            port: offsetColor(baseColor, cfg.portOffset)\r\n        }\r\n        Object.entries(values).forEach(([key, color], i) => {\r\n            console.log('ADDED legend button', key);\r\n            let el = document.createElement('a-entity');\r\n            el.setAttribute('position', `${offsetX + this.nodePadding} ${offsetY - radius - (i * radius * 2)} 0.01`);\r\n            el.setAttribute('geometry', `primitive: cylinder; height: 0.01; radius: ${radius}`);\r\n            el.setAttribute('material', `shader: flat; color: #${color.getHexString()}`); //probs change\r\n            el.setAttribute('rotation', '90 0 0');\r\n            //text\r\n            let t = document.createElement('a-entity');\r\n            //t.setAttribute('geometry', 'primitive: plane; width: auto; height: auto');\r\n            //t.setAttribute('material', 'transparent: true; opacity: 0');\r\n            t.setAttribute('text', `wrapCount: 20; value: ${key}; align: left; color: blue; anchor: left; opacity: 1; width: ${this.containerWidth - radius}`);\r\n            t.setAttribute('position', `${radius} -0.02 0`);\r\n            t.setAttribute('rotation', '-90 0 0');\r\n            el.appendChild(t);\r\n\r\n            node.appendChild(el);\r\n        })\r\n    }\r\n}\r\n","import { offsetColor } from \"../util\";\r\n\r\nconsole.log('MENU BUTTON LOADED');\r\n// move to file + rename to nodeSelect maybe idk\r\nfunction nodeClick(target, args) {\r\n    let nodeName = args[0]\r\n    console.log('clicked on', nodeName);\r\n    //send websocket msg.. check target selected class..\r\n    document.lol = target;\r\n    if ($(target).hasClass('selected')) {\r\n        $(target).removeClass('selected');\r\n        target.setAttribute('text', 'color: white');\r\n        window.app.menuController.nodeMenu.cleanupNode(nodeName);\r\n        //target.flushToDOM();\r\n    } else {\r\n        $(target).addClass('selected');\r\n        target.setAttribute('text', 'color: green');\r\n        window.app.menuController.nodeMenu.visualizeNode(nodeName);\r\n        //target.flushToDOM();\r\n    }\r\n}\r\n\r\nfunction noOp(target, args) {\r\n    console.log('no op function');\r\n    return null;\r\n}\r\n\r\n//move to file\r\nfunction nodeInfo(target, args) {\r\n    const data = target.__data__;\r\n    //console.log('Node Info TARGET: ', target);\r\n    console.log('Node Info Command Data: ', data);\r\n    //console.log('TEST', data.children);\r\n    window.app.menuController.nodeInfo.displayNodeInfo(data);\r\n}\r\n// use D3 shit for this\r\nfunction collapseNode(target, args) {\r\n    const pid = args[0];\r\n    console.log('collapse',pid);\r\n    console.log('target = ', target);\r\n    if (pid) {\r\n        window.app.clusterView.collapseNode(pid);\r\n    } else {\r\n        console.log('no active node or node disconnected');\r\n    }\r\n}\r\n\r\nfunction kill(target, args) {\r\n    const pid = args[0];\r\n    const channel = window.app.clusterView.channel;\r\n    console.log(pid, channel);\r\n    if (pid) {\r\n        channel.push('msg_kill', pid);\r\n    }\r\n}\r\n\r\n// maybe rename to clickable or idk\r\nAFRAME.registerSystem('menu-button', {\r\n\r\n    init: function () {\r\n        //button name?/id -> click callbacks\r\n        this.commands = new Map();\r\n        function test(target, args) {\r\n            console.log('custom callback on', target, 'with args: ', args);\r\n            document.test();\r\n        }\r\n        //temp\r\n        //TODO change to just map.set idk\r\n        this.addCommand('testRemove', document.test2);\r\n        this.addCommand('test', test);\r\n        this.addCommand('nodeClick', nodeClick);\r\n        //this.addCommand('nodeInfo', nodeInfo);\r\n        this.addCommand('collapseNode', collapseNode);\r\n        this.addCommand('noOp', noOp);\r\n        this.addCommand('kill', kill)\r\n        this.listCommands();\r\n    },\r\n\r\n    addCommand: function (name, func) {\r\n        this.commands.set(name, func);\r\n    },\r\n\r\n    delCommand: function (name) {\r\n        this.commands.delete(name); //returns boolean\r\n    },\r\n\r\n    listCommands: function () {\r\n        //testing\r\n        for (let [name, func] of this.commands) {\r\n            console.log(name, ' -> ', func);\r\n        }\r\n    },\r\n\r\n    run: function (name, target, args) {\r\n        let func = this.commands.get(name);\r\n        if (func) {\r\n            func(target, args);\r\n        } else {\r\n            console.log('invalid button callback on button', name, 'with args:', args);\r\n        }\r\n    }\r\n})\r\n\r\n//NEEDS TO BE RENAMED TO.. idk just button / custom-button\r\nAFRAME.registerComponent('menu-button', {\r\n    /**\r\n     * schema: color and text, idk what else\r\n     */\r\n    schema: {\r\n        offset: { type: 'number', default: 0.5 },\r\n        name: { type: 'string', default: 'noOp' },\r\n        args: { type: 'array', default: [] },\r\n        clickable: { type: 'boolean', default: true } //why lol\r\n    },\r\n\r\n    init: function () {\r\n        const el = this.el;\r\n        document.el = el;\r\n        //system should be accessible through this.system?..\r\n        const system = this.el.sceneEl.systems['menu-button'];\r\n        //console.log('ID: ', this.id, this.system);\r\n        //console.log('test: ', makeButton('#00FF00'));\r\n\r\n        const color = el.components.material.material.color;\r\n        //const { r, g, b } = color;\r\n        //const highlightColor = new THREE.Color(r, g, b);\r\n        //highlightColor.offsetHSL(0.5, 0, 0);\r\n\r\n        const colorHex = `#${color.getHexString()}`;\r\n        const highlightHex = `#${offsetColor(color, this.data.offset).getHexString()}`;\r\n\r\n        //console.log(colorHex);\r\n\r\n\r\n        if (this.data.clickable) {\r\n            //prevent clicking on children to trigger events/animations\r\n            this.el.childNodes.forEach(node => {\r\n                node.addEventListener('mouseenter', evt => {\r\n                    //console.log('HELP');\r\n                    //evt.preventDefault();\r\n                    evt.stopPropagation();\r\n                });\r\n                node.addEventListener('click', evt => {\r\n                    //console.log('no click lolol');\r\n                    evt.stopPropagation();\r\n                });\r\n            });\r\n\r\n            el.setAttribute('raycastable', '');\r\n\r\n            //only when clickable? -> unclickable buttons possible..\r\n            el.setAttribute('animation__mouseenter', \"property: components.material.material.color; type: color; to: \" + highlightHex + \"; startEvents: mouseenter; dur: 50\");\r\n            el.setAttribute('animation__mouseleave', \"property: components.material.material.color; type: color; to: \" + colorHex + \"; startEvents: mouseleave; dur: 50\");\r\n            el.setAttribute('animation__click', \"property: scale; from: 1 1 1; to: 1.1 1.1 1.1; startEvents: click; dur: 200; dir: alternate\");\r\n            el.setAttribute('animation__click2', \"property: scale; from: 1.1 1.1 1.1; to: 1 1 1; startEvents: click; dur: 200; delay: 200\");\r\n\r\n            el.addEventListener('click', evt => {\r\n                console.log(evt);\r\n                // evt.target for clicked el\r\n                //console.log('SYSTEM: ', system);\r\n                let target = evt.target;\r\n                system.run(this.data.name, target, this.data.args);\r\n            });\r\n        }\r\n        // test\r\n        // let geometry = el.getObject3D('mesh').geometry;\r\n        // console.log('geometry: ', geometry);\r\n\r\n        // let edges = new THREE.EdgesGeometry(geometry);\r\n        // let line = new THEE.lineSegments(edges, new THREE.LineBasicMaterial({\r\n        //     color: 0xffffff\r\n        // }));\r\n\r\n    },\r\n\r\n    update: function (oldData) {\r\n        console.log(oldData);\r\n        console.log(this.data);\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n// function makeButton(color) {\r\n//     const colorRegex = /^#([0-9a-f]{3}){1,2}$/i;\r\n//     if (!colorRegex.test(color)) {\r\n//         color = '#FF0000';\r\n//     }\r\n//     let el = document.createElement('a-entity');\r\n\r\n\r\n//     return el;\r\n//     return `\r\n//     <a-entity\r\n//         geometry=\"primitive: cylinder; height: 0.1; radius: 0.15\"\r\n//         material={\\`shader: flat; color: ${color}; transparent: true; opacity: 0.5\\`}\r\n//         rotation=\"90 0 0\"\r\n//         position=\"-0.3 0.3 0\"\r\n//     ></a-entity>\r\n//     `\r\n// }","\r\nAFRAME.registerComponent('node-info', {\r\n    dependencies: ['geometry'], //wait for object to load\r\n    init: function () {\r\n        console.log('node menu init');\r\n\r\n        window.app.menuController.nodeInfo = new NodeInfo();\r\n    }\r\n});\r\n\r\nexport default class NodeInfo {\r\n    constructor() {\r\n        console.log('NODEINFO LOADED');\r\n\r\n        this.container = document.querySelector('a-scene #node-info');\r\n        this.activeNode = false; //false or active node(process) idk\r\n\r\n        this.titleField = document.querySelector('#node-info-title');\r\n        this.nodeField  = document.querySelector('#node-info-node');\r\n        this.applField  = document.querySelector('#node-info-appl');\r\n        this.typeField  = document.querySelector('#node-info-type');\r\n        this.linksField = document.querySelector('#node-info-links');\r\n        this.killBtn = document.querySelector('#btn-collapse');\r\n    }\r\n\r\n    displayNodeInfo(info) {\r\n        //id = pid, used to collapse node..\r\n        //will need checks if pids can disconnect etc\r\n        console.log('displaying node info', info.id);\r\n        const { application, id, links, name, node, type } = info;\r\n        const numLinks = (Object.keys(links).length).toString();\r\n        \r\n        this.titleField.setAttribute('value', `Node Info: ${name}`);// append id somewhere\r\n        this.nodeField.setAttribute('value', `Node: ${node}`);\r\n        this.applField.setAttribute('value', `Application: ${application}`);\r\n        this.typeField.setAttribute('value', `Type: ${type}`);\r\n        this.linksField.setAttribute('value', `#Links: ${numLinks}`);\r\n        // set collapse button callback\r\n        this.activeNode = info;\r\n        //temp\r\n        this.killBtn.setAttribute('menu-button', `name: kill; args: ${id}`)\r\n    }\r\n}","//json doesnt support hex values\r\nexport default {\r\n    COLORS: [\r\n        0x92b82a,\r\n        0xff0000,\r\n        0x00ff00,\r\n        0x0000ff\r\n    ],\r\n    supervisorOffset: 0.3,\r\n    portOffset: -0.3,\r\n    linkColor: 0x21a33b,\r\n    maxMessages: 100,\r\n    msgHeight: 0.1 //test\r\n}\r\n\r\n","import process from './process';\r\nimport { offsetColor } from './util';\r\nimport cfg from './config';\r\n\r\nconst ALPHA_DECAY = 0.015,\r\n    PID_RADIUS = 1, //node size in aframe\r\n    //LABEL_OFFSET_X = \r\n    //LABEL_OFFSET_Y = \r\n    INVISIBLE_LINK_STRENGTH = 0.01,\r\n    LINK_LENGTH = 0.15,//0.15, //aframe\r\n    REPULSION = -0.5,//-0.15,//-LINK_LENGTH,\r\n    CENTERING_STRENGTH = 0.2;\r\n\r\n\r\n\r\nexport default class {\r\n    constructor(container, cluster_view) {\r\n        console.log('GRAPH loaded', container);\r\n        //this.container = container;\r\n        this.cluster_view = cluster_view;\r\n        this.nodeContainer = d3.select('a-scene').select('#d3-nodes');\r\n        this.linkContainer = d3.select('a-scene').select('#d3-links');\r\n        this.invisibleLinkContainer = d3.select('a-scene').select('#d3-invisible-links');\r\n\r\n        this.forceCenter = d3.forceCenter(0, 0);\r\n        this.forceLink = d3.forceLink().distance(LINK_LENGTH);\r\n        this.forceInvisibleLink = d3.forceLink().strength(INVISIBLE_LINK_STRENGTH);\r\n        this.forceManyBody = d3.forceManyBody().strength(REPULSION);\r\n\r\n        this.forceSim =\r\n            d3.forceSimulation()\r\n                .force('link', this.forceLink)\r\n                .force('invisiblelink', this.forceInvisibleLink)\r\n                .force('charge', this.forceManyBody)\r\n                .force('center', this.forceCenter)\r\n                .force('x', d3.forceX().strength(CENTERING_STRENGTH))\r\n                .force('y', d3.forceY().strength(CENTERING_STRENGTH))\r\n                .velocityDecay(0.2)\r\n                .alphaDecay(ALPHA_DECAY)\r\n                // only change position in on tick?\r\n                // call update only from websocket callbacks?..\r\n                .on('tick', () => this.update(false));\r\n\r\n        this.links = {};\r\n        this.invisible_links = {};\r\n        this.msgs = {};\r\n        //rest not needed yet\r\n\r\n        //TEST\r\n        this.cameraRig = document.querySelector('#cameraRig');\r\n        this.processes = null;\r\n        setInterval(() => { console.log('LOL'); this.testFunc() }, 1000)\r\n    }\r\n\r\n    // Links\r\n    link_id(from, to) {\r\n        return [from.id, to.id].sort().join('-');\r\n    }\r\n\r\n    addLink(source, target) {\r\n        if (source && target) {\r\n            let link = { source: source, target: target },\r\n                id = this.link_id(source, target);\r\n            this.links[id] = link;\r\n        }\r\n    }\r\n\r\n    removeLink(source, target) {\r\n        let id = this.link_id(source, target);\r\n        delete this.links[id];\r\n    }\r\n\r\n    addInvisibleLink(source, target) {\r\n        if (source && target) {\r\n            let link = { source: source, target: target },\r\n                id = this.link_id(source, target);\r\n            this.invisible_links[id] = link;\r\n        }\r\n    }\r\n\r\n    removeInvisibleLink(source, target) {\r\n        if (source && target) {\r\n            let id = this.link_id(source, target);\r\n            delete this.invisible_links[id];\r\n        }\r\n    }\r\n\r\n    removeProcess(process) {\r\n        d3.values(process.links).forEach(linked_process => {\r\n            delete this.links[this.link_id(process, linked_process)];\r\n        });\r\n\r\n        let grouping_process = this.cluster_view.grouping_processes[process.node];\r\n        if (grouping_process) {\r\n            this.removeInvisibleLink(process, grouping_process);\r\n        }\r\n\r\n        if (process == grouping_process) {\r\n            d3.keys(process.invisible_links).forEach(other_process => {\r\n                this.removeInvisibleLink(process, other_process);\r\n            });\r\n        }\r\n    }\r\n\r\n    msgTraceProcess(d, node) {\r\n        console.log('traceProcess: ', d);\r\n        d.msg_traced = true;\r\n        this.cluster_view.msgTracePID(d.id);\r\n        // TODO add traced component to node..\r\n    }\r\n\r\n    stopMsgTraceAll() {\r\n        d3.values(this.cluster_view.processes).forEach(pid => {\r\n            pid.msg_traced = false;\r\n        });\r\n    }\r\n\r\n    update(force_restart) {\r\n        let pids_list = d3.values(this.cluster_view.processes),\r\n            links_list = d3.values(this.links),\r\n            invisible_links_list = d3.values(this.invisible_links),\r\n            self = this;\r\n\r\n        let pids_by_node = d3.nest().key(d => d.node).map(pids_list),\r\n            nodes_list = pids_by_node.keys();\r\n\r\n        let processes = this.nodeContainer.selectAll('a-entity').data(pids_list, d => d.id);\r\n        //test\r\n        this.processes = processes;\r\n        //\r\n        let links = this.linkContainer.selectAll('a-entity').data(links_list, d => this.link_id(d.source, d.target));\r\n        let invisible_links = this.invisibleLinkContainer.selectAll('a-entity').data(invisible_links_list, d => this.link_id(d.source, d.target));\r\n        //console.log('prcs', processes);\r\n\r\n        this.forceSim.nodes(pids_list);\r\n        this.forceSim.force('link').links(links_list);\r\n        this.forceSim.force('invisiblelink').links(invisible_links_list);\r\n\r\n        // update processes \r\n\r\n        let grouping_pids_list = d3.values(this.cluster_view.grouping_processes);\r\n        let shit = d3.select('a-scene').select('#d3-test')\r\n            .selectAll('a-entity').data(grouping_pids_list, d => d.id);\r\n        //rename lol TODO\r\n        shit.join(\r\n            enter => {\r\n                enter\r\n                    // .append('a-entity')\r\n                    // .attr('geometry', function (d, i) {\r\n                    //     return 'primitive: sphere' \r\n                    // })\r\n                    // .merge(shit)\r\n                    .append('a-entity')\r\n                    //.merge(shit)\r\n                    // .attr('geometry', function (d, i) {\r\n                    //     //return 'primitive: sphere'\r\n                    //     return 'primitive: plane; width: 20; height: auto;';\r\n                    // })\r\n                    .attr('position', function (d, i) {\r\n                        //console.log(d);\r\n                        return `${d.x} 5 ${d.y}`\r\n                    })\r\n                    //make bg transparent\r\n                    // .attr('material', function (d, i) {\r\n                    //     return 'color: yellow; transparent: true; opacity: 0'\r\n                    // })\r\n                    .attr('text', function (d, i) {\r\n                        return `wrapCount: 20; value: ${d.node}; align: center; color: blue; side: double; width: 20`\r\n                    })\r\n                // .each(function(d, i) {\r\n                //     this.flushToDOM()\r\n                // })\r\n\r\n            },\r\n            update => {\r\n                //needed?\r\n                update\r\n                    .attr('position', function (d, i) {\r\n                        //console.log(d);\r\n                        return `${d.x} 5 ${d.y}`\r\n                    })\r\n            }\r\n        )\r\n\r\n\r\n\r\n\r\n\r\n        processes.join(\r\n            enter => {\r\n                enter\r\n                    .append('a-entity')\r\n                    //.merge(processes)\r\n                    .attr('geometry', function (d, i) {\r\n                        console.log('adding node');\r\n                        return `primitive: sphere; radius: 0.2`;\r\n                    })\r\n                    .attr('position', function (d, i) {\r\n                        console.log('a')\r\n                        return `${d.x} 0 ${d.y}`\r\n                    })\r\n                    .attr('material', function (d, i) {\r\n                        let type = d.type;\r\n                        //hex value to string\r\n                        //let color = `#${d.color.getHexString()}`;\r\n                        let color = d.color; //THREE.Color\r\n                        //could be switch but only 2..\r\n                        if (type == \"supervisor\") {\r\n                            let offset = cfg.supervisorOffset;\r\n                            color = offsetColor(color, offset);\r\n                        } else if (type == \"port\") {\r\n                            let offset = cfg.portOffset;\r\n                            color = offsetColor(color, offset);\r\n                        }\r\n                        //console.log(`#${color.getHexString()}`);\r\n                        return `shader: flat; color: #${color.getHexString()};`;\r\n                    })\r\n                    .on('click', function (d, i) {\r\n                        //if (d3.event.defaultPrevented) return;\r\n                        //    console.log('clicked graph node CALLBACK');\r\n                        //    console.log(this.__data__, d);\r\n                        let mc = window.app.menuController;\r\n                        let activeMenu = mc.tabIDs[mc.activeTab];\r\n                        let visible = mc.visible;\r\n                        console.log(activeMenu, visible);\r\n\r\n                        if (!visible) return;\r\n                        switch (activeMenu) {\r\n                            case \"#node-info\":\r\n                                console.log(this);\r\n                                mc.nodeInfo.displayNodeInfo(this.__data__);\r\n                                console.log('display from graph');\r\n                                break;\r\n                            case \"#logger-trace\":\r\n                                // add to selected nodes..?\r\n                                //d: event, this: dom el? TODO check tf this is lol\r\n                                self.msgTraceProcess(this.__data__, d.target);\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n\r\n\r\n                        // d is click event?\r\n                        // NO ON CLICK.. -> DELETE IG LOL\r\n                        // set menubutton component with nodeInfo callback\r\n                        // data can be accessed through event.target\r\n                    })\r\n                    // .attr('raycastable', function (d, i) {\r\n                    //     return '';\r\n                    // })\r\n                    //no op function but still highlights nodes\r\n                    .attr('menu-button', function (d, i) {\r\n                        return 'name: noOp; offset: 0.1';\r\n                    })\r\n                    // add node information text\r\n                    .each(function (d, i) {\r\n                        console.log('b')\r\n                        //cant be entity.. selectAll entity error, maybe change to select by class..\r\n                        let name = document.createElement('a-plane');\r\n                        name.setAttribute('material', 'transparent: true; opacity: 0');\r\n                        name.setAttribute('geometry', 'primitive: plane; width: 2; height: auto');\r\n                        name.setAttribute('text', `wrapCount: 20; value: ${d.name}; align: center; color: blue; side: double`);\r\n                        name.setAttribute('position', `0 0.5 0`);\r\n\r\n                        this.appendChild(name);\r\n                    })\r\n            },\r\n            update => {\r\n                //return update\r\n                update\r\n                    .attr('position', function (d, i) {\r\n\r\n                        return `${d.x} 0 ${d.y}`\r\n                    })\r\n                    // .each(function (d) {\r\n                    //     d.element = this; \r\n                    // })\r\n            },\r\n            exit => {\r\n                exit.remove();\r\n            }\r\n        );\r\n\r\n\r\n\r\n        //move to node update maybe\r\n        //node info when distance < x\r\n        //     let nodeList = processes._groups[0];\r\n        //    // console.log(nodeList[0])\r\n        //     let camPos = this.cameraRig.object3D.position;\r\n        //     for (let i = 0; i < nodeList.length; i++) {\r\n        //         const data = nodeList[i].__data__;\r\n        //         const dist = Math.sqrt((data.x - camPos.x)^2 + (data.y - camPos.y)^2);\r\n\r\n        //     }\r\n\r\n        links.join(\r\n            enter => {\r\n                enter\r\n                    .append('a-entity')\r\n                    .merge(links)\r\n                    .attr('line', function (d, i) {\r\n                        let color = new THREE.Color(cfg.linkColor);\r\n                        color = `#${color.getHexString()}`;\r\n                        return `start: ${d.source.x} 0 ${d.source.y}; end: ${d.target.x} 0 ${d.target.y}; color: ${color}`;\r\n                    })\r\n            }\r\n        );\r\n\r\n        invisible_links.exit().remove();\r\n        let new_invisible_links = invisible_links.enter()\r\n        invisible_links = new_invisible_links.merge(invisible_links);\r\n\r\n\r\n\r\n\r\n\r\n        this.testFunc();\r\n\r\n        if (force_restart)\r\n            this.forceSim.alpha(1).restart();\r\n    }\r\n\r\n\r\n    // kinda shit.. idk\r\n    testFunc = () => {\r\n        let rig = document.querySelector('#cameraRig');\r\n        let camPos = rig.object3D.position;\r\n        let nodeList = this.processes._groups[0];\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            let node = nodeList[i];\r\n            if (node) {\r\n                let d = node.__data__;\r\n                let dist = Math.sqrt((d.x - camPos.x) ** 2 + (d.y - camPos.z) ** 2);\r\n                // console.log(d.x, d.y, camPos.x, camPos.z, dist)\r\n\r\n                // let line = document.querySelector('#LINETEST');\r\n                // line.setAttribute('line', `start: ${d.x} 0 ${d.y}; end: ${camPos.x} 0 ${camPos.z}; color: green`)\r\n\r\n                let text = node.firstChild;\r\n                //add showAllNodes boolean controlled by menu button idk..\r\n                if (dist < 20) { // TODO change dist in menu?? + - buttons or smth\r\n                    // console.log(node);\r\n                    text.setAttribute('visible', true);\r\n                    //add user height to position\r\n                    let v = new THREE.Vector3(camPos.x, camPos.y + 1.6, camPos.z);\r\n                    text.object3D.lookAt(v);\r\n                    //node.setAttribute('material', 'color: green')\r\n                } else {\r\n                    text.setAttribute('visible', false);\r\n                    //node.setAttribute('material', 'color: red')\r\n                }\r\n            }\r\n            //console.log(camPos.x ) \r\n        }\r\n    }\r\n}","// UNTESTED\r\nexport default class {\r\n    constructor() {\r\n        this.isVR = false;\r\n        this.tabIDs = ['#menu', /*'#cam2',*/ '#node-info', '#logger-info', '#logger-trace'];\r\n        this.activeTab = 0;\r\n        this.visible = false;\r\n        //keep menu and node info classes here idk..\r\n        this.nodeMenu = null; //initialized when components load\r\n        this.nodeInfo = null;\r\n        //this.init();\r\n        // TODO fucking useless shite\r\n        document.querySelector('body').onresize = () => {\r\n            // resize only when in desktop mode\r\n            if (this.isVR) return;\r\n            console.log('resize');\r\n            this.resizeTabs();\r\n        }\r\n    }\r\n    // TODO FIX OR REMOVE\r\n    resizeTabs() {\r\n        const dims = document.querySelector('a-scene').getBoundingClientRect(); // or use window.innerHeight etc\r\n        this.tabIDs.forEach(id => {\r\n            //const scale = cfg.menuScale * dims.height; //% of scene height\r\n            const dist = 0.01; // idk\r\n            //const sceneH = dims.height;\r\n            const el = document.querySelector(id);\r\n            //const x = \r\n            // el.setAttribute('height', `${0.01 * scale}`); // ??? lol\r\n            // el.setAttribute('width', `${0.01 * scale}`); // square tab\r\n            // el.setAttribute('scale', `${0.01} ${0.01} ${0.01}`);\r\n            // el.setAttribute('position', .);\r\n        })\r\n    }\r\n\r\n    // attaches menu tabs to controllers\r\n    initVR() {\r\n        console.log('INIT VR');\r\n        this.isVR = true;\r\n        // reset TODO test lol\r\n        window.app.menuController.nodeMenu.update([]);\r\n        window.app.Tracer.reset();\r\n        window.app.Logger.reset();// TODO doesnt work\r\n        this.tabIDs.forEach(id => {\r\n            let el = document.querySelector(id);\r\n            let newParent = document.querySelector('#controllerRight');\r\n            let copy = el.cloneNode(true);\r\n            newParent.appendChild(copy);\r\n            el.parentNode.removeChild(el);\r\n\r\n            copy.setAttribute('scale', '0.5 0.5 0.5'); // set w/h instead\r\n            copy.setAttribute('rotation', '-30 0 0');\r\n            copy.setAttribute('position', '0 0.2 -0.2');\r\n            copy.setAttribute('visible', 'false');\r\n            //maybe remove raycastable idk\r\n        })\r\n    }\r\n    // maybe change name, init normal 3D settings n shit..\r\n    // init() {\r\n    //     this.tabIDs.forEach(id => {\r\n    //         let el = document.querySelector(id);\r\n    //         let newParent = document.querySelector('#camera');\r\n    //         let copy = el.cloneNode(true);\r\n    //         newParent.appendChild(copy);\r\n    //         el.parentNode.removeChild(el);\r\n\r\n    //         // copy.removeAttribute('raycastable');\r\n    //     })\r\n    // }\r\n\r\n    toggleMenu() {\r\n        const activeID = this.tabIDs[this.activeTab];\r\n        const el = document.querySelector(activeID);\r\n        el.setAttribute('visible', !el.getAttribute('visible'));\r\n        this.visible = el.getAttribute('visible');\r\n        // if (this.visible) {\r\n        //     console.log('show');\r\n        //     el.setAttribute('raycastable', '');\r\n        // } else {\r\n        //     console.log('hide');\r\n        //     el.removeAttribute('raycastable');\r\n        // }\r\n        console.log('tab is now', !el.getAttribute('visible') ? 'not visible' : 'visible');\r\n    }\r\n\r\n    cycleMenu() {\r\n        if (this.visible) {\r\n            const l = this.tabIDs.length;\r\n            const oldEl = document.querySelector(this.tabIDs[this.activeTab]);\r\n            this.activeTab = ++this.activeTab % l;\r\n            const newEl = document.querySelector(this.tabIDs[this.activeTab]);\r\n            console.log(this.activeTab);\r\n            //still raycastable if invisible?\r\n            oldEl.setAttribute('visible', 'false');\r\n            // oldEl.removeAttribute('raycastable');\r\n            newEl.setAttribute('visible', 'true');\r\n            // newEl.setAttribute('raycastable', '');\r\n        }\r\n    }\r\n\r\n    setActive(tab) {\r\n        const idx = this.tabIDs.indexOf(tab);\r\n        if (idx >= 0) {\r\n            const oldEl = document.querySelector(this.tabIDs[this.activeTab]);\r\n            this.activeTab = idx;\r\n            const newEl = document.querySelector(this.tabIDs[this.activeTab]);\r\n\r\n            oldEl.setAttribute('visible', 'false');\r\n            newEl.setAttribute('visible', 'true');\r\n            this.visible = true;\r\n        }\r\n    }\r\n}","// this is the name of the pid that otherwise unlinked pids will group around, to keep all of a node's pids together\r\nconst GROUPING_PID = \"application_controller\";\r\n\r\nexport default class {\r\n  constructor(pid, info) {\r\n    this.id = pid;\r\n    this.links = {};\r\n    this.name = info.name;\r\n    this.node = info.node;\r\n    this.application = info.application;\r\n    this.type = info.type;\r\n    this.msg_traced = info.msg_traced;\r\n    //\r\n    this.color = info.color;\r\n\r\n    if (this.isGroupingProcess()) {\r\n      this.invisible_links = {};\r\n    }\r\n  }\r\n\r\n  isGroupingProcess() {\r\n    return this.name == GROUPING_PID;\r\n  }\r\n\r\n  qualifiedName() {\r\n    return this.name + \"@\" + this.node.replace(/@.*/, '');\r\n  }\r\n}\r\n","console.log('test loaded');\r\n\r\nconst DATA = [\r\n    { x: 10, y: 10 },\r\n    { x: 2, y: 2 },\r\n    { x: 4, y: 4 },\r\n    { x: 6, y: 6 },\r\n    { x: 8, y: 8 }\r\n];\r\n\r\ndocument.querySelector('a-scene #d3-container')\r\n    .addEventListener('loaded', console.log('el loaded'))\r\n\r\n// old tests\r\nfunction renderData() {\r\n\r\n    d3.select('a-scene').select('#d3-container').selectAll('a-entity')\r\n        .data(DATA)\r\n        .enter()\r\n        .append('a-entity')\r\n        .attr('geometry', function (d, i) {\r\n            return `primitive: sphere; radius: 1`\r\n        })\r\n        .attr('position', function (d, i) {\r\n            console.log('adding sphere on pos', d.x, d.y);\r\n            return `${d.x} 1 ${d.y}`\r\n        })\r\n        .attr('material', function (d, i) {\r\n            return `shader: standard; color: red`\r\n        });\r\n}\r\n\r\n\r\n// test force simulation:\r\nconst nodes = [{ test: 'lol' }, {}, {}, {}, {}];\r\nconst linksOLD = [\r\n    { source: 0, target: 1 },\r\n    { source: 1, target: 2 },\r\n    { source: 2, target: 3 },\r\n    { source: 3, target: 4 }\r\n];\r\n\r\nconst links = []\r\n//     { source: 0, target: 3 },\r\n//     { source: 2, target: 4 },\r\n// ]\r\n\r\n// temp testing function\r\nfunction addNode() {\r\n    nodes.unshift({});\r\n    sim.nodes(nodes);\r\n    sim.alpha(1).restart();\r\n    console.log('reloaded');\r\n}\r\n\r\nfunction removeNode() {\r\n    nodes.pop();\r\n    sim.nodes(nodes);\r\n    sim.alpha(1).restart();\r\n}\r\n\r\nfunction addLink(source, target) {\r\n    if (source && target) {\r\n        let link = { source: source.index, target: target.index }\r\n        links.push(link)\r\n        console.log(links)\r\n        sim.force('link').links(links);\r\n        // no check if exists..\r\n        sim.alpha(1).restart();\r\n    }\r\n}\r\n\r\nconst sim = d3.forceSimulation(nodes)\r\n    .force('charge', d3.forceManyBody().strength(-10)) //default\r\n    .force('center', d3.forceCenter(0, 0))\r\n    .force('link', d3.forceLink().distance(1).links(links))\r\n    .force('x', d3.forceX().strength(0.5))\r\n    .force('y', d3.forceY().strength(0.5))\r\n    .velocityDecay(0.2)\r\n    .alphaDecay(0.02)\r\n    .on('tick', ticked);\r\n\r\n\r\nfunction ticked() {\r\n    const container = d3.select('a-scene').select('#d3-nodes')\r\n        .selectAll('a-entity')\r\n        .data(nodes);\r\n    container.join(\r\n        enter => {\r\n            enter\r\n                .append('a-entity')\r\n                .merge(container)\r\n                .attr('geometry', function (d, i) {\r\n                    return `primitive: sphere; radius: 1`;\r\n                })\r\n                .attr('position', function (d, i) {\r\n                    return `${d.x} 1 ${d.y}`\r\n                })\r\n                .attr('material', function (d, i) {\r\n                    return `shader: standard; color: red`;\r\n                })\r\n        },\r\n        update => {\r\n            return update;\r\n        },\r\n        exit => {\r\n            exit.remove()\r\n                // .transition()\r\n                // .duration(500)\r\n                // .attr('material', 'color: green')\r\n                // .on('end', function () {\r\n                //     d3.select(this).remove();\r\n                // })\r\n                // .selection()\r\n        });\r\n\r\n    let test = d3.select('#d3-links').selectAll('a-entity').data(links, d => `${d.source}-${d.target}`)\r\n        .join('a-entity')\r\n        .attr('line', function (d, i) {\r\n            let source = nodes[d.source.index];\r\n            let target = nodes[d.target.index];\r\n            //console.log(d);\r\n            return `start: ${source.x} 0 ${source.y}; end: ${target.x} 0 ${target.y}; color: green`\r\n        });\r\n\r\n    // links.enter()\r\n    //     .append('a-entity')\r\n    //     .attr('line', function (d, i) {\r\n    //         let source = nodes[d.source];\r\n    //         let target = nodes[d.target];\r\n    //         return `start: ${source.x} 0 ${source.y}; end: ${target.x} 0 ${target.y}; color: green`\r\n    //     })\r\n}\r\n\r\nfunction test() {\r\n    console.log('adding node..');\r\n    addNode();\r\n    setTimeout(() => console.log('adding link..'), 1000);\r\n    //setTimeout(() => addLink(nodes[0], nodes[5]), 1000);\r\n}\r\n\r\nfunction test2() {\r\n    console.log('removing node');\r\n    removeNode();\r\n}\r\n//..\r\ndocument.test = test;\r\ndocument.test2 = test2;","// NOTE: The contents of this file will only be executed if\r\n// you uncomment its entry in \"assets/js/app.js\".\r\n\r\n// Bring in Phoenix channels client library:\r\nimport {Socket} from \"phoenix\"\r\n\r\n// And connect to the path in \"lib/visualixir_vr_web/endpoint.ex\". We pass the\r\n// token for authentication. Read below how it should be used.\r\nlet socket = new Socket(\"/socket\", {params: {token: window.userToken}})\r\n\r\n// When you connect, you'll often need to authenticate the client.\r\n// For example, imagine you have an authentication plug, `MyAuth`,\r\n// which authenticates the session and assigns a `:current_user`.\r\n// If the current user exists you can assign the user's token in\r\n// the connection for use in the layout.\r\n//\r\n// In your \"lib/visualixir_vr_web/router.ex\":\r\n//\r\n//     pipeline :browser do\r\n//       ...\r\n//       plug MyAuth\r\n//       plug :put_user_token\r\n//     end\r\n//\r\n//     defp put_user_token(conn, _) do\r\n//       if current_user = conn.assigns[:current_user] do\r\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\r\n//         assign(conn, :user_token, token)\r\n//       else\r\n//         conn\r\n//       end\r\n//     end\r\n//\r\n// Now you need to pass this token to JavaScript. You can do so\r\n// inside a script tag in \"lib/visualixir_vr_web/templates/layout/app.html.heex\":\r\n//\r\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\r\n//\r\n// You will need to verify the user token in the \"connect/3\" function\r\n// in \"lib/visualixir_vr_web/channels/user_socket.ex\":\r\n//\r\n//     def connect(%{\"token\" => token}, socket, _connect_info) do\r\n//       # max_age: 1209600 is equivalent to two weeks in seconds\r\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1_209_600) do\r\n//         {:ok, user_id} ->\r\n//           {:ok, assign(socket, :user, user_id)}\r\n//\r\n//         {:error, reason} ->\r\n//           :error\r\n//       end\r\n//     end\r\n//\r\n// Finally, connect to the socket:\r\nsocket.connect()\r\nconsole.log('connected to websocket')\r\n\r\n// Now that you are connected, you can join channels with a topic.\r\n// Let's assume you have a channel with a topic named `room` and the\r\n// subtopic is its id - in this case 42:\r\n// let channel = socket.channel(\"nodes:lobby\", {})\r\n\r\n\r\nexport default socket\r\n","\r\nfunction offsetColor(color, offset = 0.5) {\r\n    if (typeof(color) == 'object' && color.isColor) {\r\n        const { r, g, b } = color;\r\n        const shifted = new THREE.Color(r, g, b);\r\n        shifted.offsetHSL(offset, 0, 0);\r\n        return shifted;\r\n    } else {\r\n        return new THREE.Color(0xff0000)\r\n    }\r\n}\r\n// returns the positive modulo //TODO used? :p\r\nfunction mod(n, m) {\r\n    return ((n % m) + m) % m;\r\n}\r\n\r\nexport { offsetColor, mod };","\nrequire.register(\"phoenix_html/priv/static/phoenix_html.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix_html\");\n  (function() {\n    \"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"hidden\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n  })();\n});","\nrequire.register(\"phoenix/priv/static/phoenix.cjs.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    var __defProp = Object.defineProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __export = (target, all) => {\n  __markAsModule(target);\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// js/phoenix/index.js\n__export(exports, {\n  Channel: () => Channel,\n  LongPoll: () => LongPoll,\n  Presence: () => Presence,\n  Serializer: () => serializer_default,\n  Socket: () => Socket\n});\n\n// js/phoenix/utils.js\nvar closure = (value) => {\n  if (typeof value === \"function\") {\n    return value;\n  } else {\n    let closure2 = function() {\n      return value;\n    };\n    return closure2;\n  }\n};\n\n// js/phoenix/constants.js\nvar globalSelf = typeof self !== \"undefined\" ? self : null;\nvar phxWindow = typeof window !== \"undefined\" ? window : null;\nvar global = globalSelf || phxWindow || void 0;\nvar DEFAULT_VSN = \"2.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 1e4;\nvar WS_CLOSE_NORMAL = 1e3;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\nvar XHR_STATES = {\n  complete: 4\n};\n\n// js/phoenix/push.js\nvar Push = class {\n  constructor(channel, event, payload, timeout) {\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || function() {\n      return {};\n    };\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n  resend(timeout) {\n    this.timeout = timeout;\n    this.reset();\n    this.send();\n  }\n  send() {\n    if (this.hasReceived(\"timeout\")) {\n      return;\n    }\n    this.startTimeout();\n    this.sent = true;\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    });\n  }\n  receive(status, callback) {\n    if (this.hasReceived(status)) {\n      callback(this.receivedResp.response);\n    }\n    this.recHooks.push({ status, callback });\n    return this;\n  }\n  reset() {\n    this.cancelRefEvent();\n    this.ref = null;\n    this.refEvent = null;\n    this.receivedResp = null;\n    this.sent = false;\n  }\n  matchReceive({ status, response, _ref }) {\n    this.recHooks.filter((h) => h.status === status).forEach((h) => h.callback(response));\n  }\n  cancelRefEvent() {\n    if (!this.refEvent) {\n      return;\n    }\n    this.channel.off(this.refEvent);\n  }\n  cancelTimeout() {\n    clearTimeout(this.timeoutTimer);\n    this.timeoutTimer = null;\n  }\n  startTimeout() {\n    if (this.timeoutTimer) {\n      this.cancelTimeout();\n    }\n    this.ref = this.channel.socket.makeRef();\n    this.refEvent = this.channel.replyEventName(this.ref);\n    this.channel.on(this.refEvent, (payload) => {\n      this.cancelRefEvent();\n      this.cancelTimeout();\n      this.receivedResp = payload;\n      this.matchReceive(payload);\n    });\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {});\n    }, this.timeout);\n  }\n  hasReceived(status) {\n    return this.receivedResp && this.receivedResp.status === status;\n  }\n  trigger(status, response) {\n    this.channel.trigger(this.refEvent, { status, response });\n  }\n};\n\n// js/phoenix/timer.js\nvar Timer = class {\n  constructor(callback, timerCalc) {\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n  reset() {\n    this.tries = 0;\n    clearTimeout(this.timer);\n  }\n  scheduleTimeout() {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1;\n      this.callback();\n    }, this.timerCalc(this.tries + 1));\n  }\n};\n\n// js/phoenix/channel.js\nvar Channel = class {\n  constructor(topic, params, socket) {\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = closure(params || {});\n    this.socket = socket;\n    this.bindings = [];\n    this.bindingRef = 0;\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.stateChangeRefs = [];\n    this.rejoinTimer = new Timer(() => {\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }, this.socket.rejoinAfterMs);\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()));\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset();\n      if (this.isErrored()) {\n        this.rejoin();\n      }\n    }));\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined;\n      this.rejoinTimer.reset();\n      this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n      this.pushBuffer = [];\n    });\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored;\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.onClose(() => {\n      this.rejoinTimer.reset();\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`);\n      this.state = CHANNEL_STATES.closed;\n      this.socket.remove(this);\n    });\n    this.onError((reason) => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `error ${this.topic}`, reason);\n      if (this.isJoining()) {\n        this.joinPush.reset();\n      }\n      this.state = CHANNEL_STATES.errored;\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.joinPush.receive(\"timeout\", () => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout);\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout);\n      leavePush.send();\n      this.state = CHANNEL_STATES.errored;\n      this.joinPush.reset();\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout();\n      }\n    });\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload);\n    });\n  }\n  join(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\");\n    } else {\n      this.timeout = timeout;\n      this.joinedOnce = true;\n      this.rejoin();\n      return this.joinPush;\n    }\n  }\n  onClose(callback) {\n    this.on(CHANNEL_EVENTS.close, callback);\n  }\n  onError(callback) {\n    return this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n  }\n  on(event, callback) {\n    let ref = this.bindingRef++;\n    this.bindings.push({ event, ref, callback });\n    return ref;\n  }\n  off(event, ref) {\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref));\n    });\n  }\n  canPush() {\n    return this.socket.isConnected() && this.isJoined();\n  }\n  push(event, payload, timeout = this.timeout) {\n    payload = payload || {};\n    if (!this.joinedOnce) {\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`);\n    }\n    let pushEvent = new Push(this, event, function() {\n      return payload;\n    }, timeout);\n    if (this.canPush()) {\n      pushEvent.send();\n    } else {\n      pushEvent.startTimeout();\n      this.pushBuffer.push(pushEvent);\n    }\n    return pushEvent;\n  }\n  leave(timeout = this.timeout) {\n    this.rejoinTimer.reset();\n    this.joinPush.cancelTimeout();\n    this.state = CHANNEL_STATES.leaving;\n    let onClose = () => {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", `leave ${this.topic}`);\n      this.trigger(CHANNEL_EVENTS.close, \"leave\");\n    };\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout);\n    leavePush.receive(\"ok\", () => onClose()).receive(\"timeout\", () => onClose());\n    leavePush.send();\n    if (!this.canPush()) {\n      leavePush.trigger(\"ok\", {});\n    }\n    return leavePush;\n  }\n  onMessage(_event, payload, _ref) {\n    return payload;\n  }\n  isMember(topic, event, payload, joinRef) {\n    if (this.topic !== topic) {\n      return false;\n    }\n    if (joinRef && joinRef !== this.joinRef()) {\n      if (this.socket.hasLogger())\n        this.socket.log(\"channel\", \"dropping outdated message\", { topic, event, payload, joinRef });\n      return false;\n    } else {\n      return true;\n    }\n  }\n  joinRef() {\n    return this.joinPush.ref;\n  }\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return;\n    }\n    this.socket.leaveOpenTopic(this.topic);\n    this.state = CHANNEL_STATES.joining;\n    this.joinPush.resend(timeout);\n  }\n  trigger(event, payload, ref, joinRef) {\n    let handledPayload = this.onMessage(event, payload, ref, joinRef);\n    if (payload && !handledPayload) {\n      throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\");\n    }\n    let eventBindings = this.bindings.filter((bind) => bind.event === event);\n    for (let i = 0; i < eventBindings.length; i++) {\n      let bind = eventBindings[i];\n      bind.callback(handledPayload, ref, joinRef || this.joinRef());\n    }\n  }\n  replyEventName(ref) {\n    return `chan_reply_${ref}`;\n  }\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed;\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored;\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined;\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining;\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving;\n  }\n};\n\n// js/phoenix/ajax.js\nvar Ajax = class {\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n    if (global.XDomainRequest) {\n      let req = new global.XDomainRequest();\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n    } else {\n      let req = new global.XMLHttpRequest();\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n    }\n  }\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n    req.timeout = timeout;\n    req.open(method, endPoint);\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText);\n      callback && callback(response);\n    };\n    if (ontimeout) {\n      req.ontimeout = ontimeout;\n    }\n    req.onprogress = () => {\n    };\n    req.send(body);\n  }\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n    req.open(method, endPoint, true);\n    req.timeout = timeout;\n    req.setRequestHeader(\"Content-Type\", accept);\n    req.onerror = () => {\n      callback && callback(null);\n    };\n    req.onreadystatechange = () => {\n      if (req.readyState === XHR_STATES.complete && callback) {\n        let response = this.parseJSON(req.responseText);\n        callback(response);\n      }\n    };\n    if (ontimeout) {\n      req.ontimeout = ontimeout;\n    }\n    req.send(body);\n  }\n  static parseJSON(resp) {\n    if (!resp || resp === \"\") {\n      return null;\n    }\n    try {\n      return JSON.parse(resp);\n    } catch (e) {\n      console && console.log(\"failed to parse JSON response\", resp);\n      return null;\n    }\n  }\n  static serialize(obj, parentKey) {\n    let queryStr = [];\n    for (var key in obj) {\n      if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n        continue;\n      }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key;\n      let paramVal = obj[key];\n      if (typeof paramVal === \"object\") {\n        queryStr.push(this.serialize(paramVal, paramKey));\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n      }\n    }\n    return queryStr.join(\"&\");\n  }\n  static appendParams(url, params) {\n    if (Object.keys(params).length === 0) {\n      return url;\n    }\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\";\n    return `${url}${prefix}${this.serialize(params)}`;\n  }\n};\n\n// js/phoenix/longpoll.js\nvar LongPoll = class {\n  constructor(endPoint) {\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function() {\n    };\n    this.onerror = function() {\n    };\n    this.onmessage = function() {\n    };\n    this.onclose = function() {\n    };\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n    this.poll();\n  }\n  normalizeEndpoint(endPoint) {\n    return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n  }\n  endpointURL() {\n    return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n  }\n  closeAndRetry() {\n    this.close();\n    this.readyState = SOCKET_STATES.connecting;\n  }\n  ontimeout() {\n    this.onerror(\"timeout\");\n    this.closeAndRetry();\n  }\n  poll() {\n    if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n      return;\n    }\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if (resp) {\n        var { status, token, messages } = resp;\n        this.token = token;\n      } else {\n        status = 0;\n      }\n      switch (status) {\n        case 200:\n          messages.forEach((msg) => {\n            setTimeout(() => {\n              this.onmessage({ data: msg });\n            }, 0);\n          });\n          this.poll();\n          break;\n        case 204:\n          this.poll();\n          break;\n        case 410:\n          this.readyState = SOCKET_STATES.open;\n          this.onopen();\n          this.poll();\n          break;\n        case 403:\n          this.onerror();\n          this.close();\n          break;\n        case 0:\n        case 500:\n          this.onerror();\n          this.closeAndRetry();\n          break;\n        default:\n          throw new Error(`unhandled poll status ${status}`);\n      }\n    });\n  }\n  send(body) {\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if (!resp || resp.status !== 200) {\n        this.onerror(resp && resp.status);\n        this.closeAndRetry();\n      }\n    });\n  }\n  close(_code, _reason) {\n    this.readyState = SOCKET_STATES.closed;\n    this.onclose();\n  }\n};\n\n// js/phoenix/presence.js\nvar Presence = class {\n  constructor(channel, opts = {}) {\n    let events = opts.events || { state: \"presence_state\", diff: \"presence_diff\" };\n    this.state = {};\n    this.pendingDiffs = [];\n    this.channel = channel;\n    this.joinRef = null;\n    this.caller = {\n      onJoin: function() {\n      },\n      onLeave: function() {\n      },\n      onSync: function() {\n      }\n    };\n    this.channel.on(events.state, (newState) => {\n      let { onJoin, onLeave, onSync } = this.caller;\n      this.joinRef = this.channel.joinRef();\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave);\n      this.pendingDiffs.forEach((diff) => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave);\n      });\n      this.pendingDiffs = [];\n      onSync();\n    });\n    this.channel.on(events.diff, (diff) => {\n      let { onJoin, onLeave, onSync } = this.caller;\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff);\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave);\n        onSync();\n      }\n    });\n  }\n  onJoin(callback) {\n    this.caller.onJoin = callback;\n  }\n  onLeave(callback) {\n    this.caller.onLeave = callback;\n  }\n  onSync(callback) {\n    this.caller.onSync = callback;\n  }\n  list(by) {\n    return Presence.list(this.state, by);\n  }\n  inPendingSyncState() {\n    return !this.joinRef || this.joinRef !== this.channel.joinRef();\n  }\n  static syncState(currentState, newState, onJoin, onLeave) {\n    let state = this.clone(currentState);\n    let joins = {};\n    let leaves = {};\n    this.map(state, (key, presence) => {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key];\n      if (currentPresence) {\n        let newRefs = newPresence.metas.map((m) => m.phx_ref);\n        let curRefs = currentPresence.metas.map((m) => m.phx_ref);\n        let joinedMetas = newPresence.metas.filter((m) => curRefs.indexOf(m.phx_ref) < 0);\n        let leftMetas = currentPresence.metas.filter((m) => newRefs.indexOf(m.phx_ref) < 0);\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = this.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n  }\n  static syncDiff(state, diff, onJoin, onLeave) {\n    let { joins, leaves } = this.clone(diff);\n    if (!onJoin) {\n      onJoin = function() {\n      };\n    }\n    if (!onLeave) {\n      onLeave = function() {\n      };\n    }\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key];\n      state[key] = this.clone(newPresence);\n      if (currentPresence) {\n        let joinedRefs = state[key].metas.map((m) => m.phx_ref);\n        let curMetas = currentPresence.metas.filter((m) => joinedRefs.indexOf(m.phx_ref) < 0);\n        state[key].metas.unshift(...curMetas);\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      let refsToRemove = leftPresence.metas.map((m) => m.phx_ref);\n      currentPresence.metas = currentPresence.metas.filter((p) => {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  }\n  static list(presences, chooser) {\n    if (!chooser) {\n      chooser = function(key, pres) {\n        return pres;\n      };\n    }\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence);\n    });\n  }\n  static map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n  }\n  static clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// js/phoenix/serializer.js\nvar serializer_default = {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: { push: 0, reply: 1, broadcast: 2 },\n  encode(msg, callback) {\n    if (msg.payload.constructor === ArrayBuffer) {\n      return callback(this.binaryEncode(msg));\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload];\n      return callback(JSON.stringify(payload));\n    }\n  },\n  decode(rawPayload, callback) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this.binaryDecode(rawPayload));\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload);\n      return callback({ join_ref, ref, topic, event, payload });\n    }\n  },\n  binaryEncode(message) {\n    let { join_ref, ref, event, topic, payload } = message;\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length;\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength);\n    let view = new DataView(header);\n    let offset = 0;\n    view.setUint8(offset++, this.KINDS.push);\n    view.setUint8(offset++, join_ref.length);\n    view.setUint8(offset++, ref.length);\n    view.setUint8(offset++, topic.length);\n    view.setUint8(offset++, event.length);\n    Array.from(join_ref, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(ref, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(topic, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    Array.from(event, (char) => view.setUint8(offset++, char.charCodeAt(0)));\n    var combined = new Uint8Array(header.byteLength + payload.byteLength);\n    combined.set(new Uint8Array(header), 0);\n    combined.set(new Uint8Array(payload), header.byteLength);\n    return combined.buffer;\n  },\n  binaryDecode(buffer) {\n    let view = new DataView(buffer);\n    let kind = view.getUint8(0);\n    let decoder = new TextDecoder();\n    switch (kind) {\n      case this.KINDS.push:\n        return this.decodePush(buffer, view, decoder);\n      case this.KINDS.reply:\n        return this.decodeReply(buffer, view, decoder);\n      case this.KINDS.broadcast:\n        return this.decodeBroadcast(buffer, view, decoder);\n    }\n  },\n  decodePush(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1);\n    let topicSize = view.getUint8(2);\n    let eventSize = view.getUint8(3);\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1;\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize));\n    offset = offset + joinRefSize;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    return { join_ref: joinRef, ref: null, topic, event, payload: data };\n  },\n  decodeReply(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1);\n    let refSize = view.getUint8(2);\n    let topicSize = view.getUint8(3);\n    let eventSize = view.getUint8(4);\n    let offset = this.HEADER_LENGTH + this.META_LENGTH;\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize));\n    offset = offset + joinRefSize;\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize));\n    offset = offset + refSize;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    let payload = { status: event, response: data };\n    return { join_ref: joinRef, ref, topic, event: CHANNEL_EVENTS.reply, payload };\n  },\n  decodeBroadcast(buffer, view, decoder) {\n    let topicSize = view.getUint8(1);\n    let eventSize = view.getUint8(2);\n    let offset = this.HEADER_LENGTH + 2;\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n    offset = offset + topicSize;\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize));\n    offset = offset + eventSize;\n    let data = buffer.slice(offset, buffer.byteLength);\n    return { join_ref: null, ref: null, topic, event, payload: data };\n  }\n};\n\n// js/phoenix/socket.js\nvar Socket = class {\n  constructor(endPoint, opts = {}) {\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || global.WebSocket || LongPoll;\n    this.establishedConnections = 0;\n    this.defaultEncoder = serializer_default.encode.bind(serializer_default);\n    this.defaultDecoder = serializer_default.decode.bind(serializer_default);\n    this.closeWasClean = false;\n    this.binaryType = opts.binaryType || \"arraybuffer\";\n    this.connectClock = 1;\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder;\n      this.decode = opts.decode || this.defaultDecoder;\n    } else {\n      this.encode = this.defaultEncoder;\n      this.decode = this.defaultDecoder;\n    }\n    let awaitingConnectionOnPageShow = null;\n    if (phxWindow && phxWindow.addEventListener) {\n      phxWindow.addEventListener(\"pagehide\", (_e) => {\n        if (this.conn) {\n          this.disconnect();\n          awaitingConnectionOnPageShow = this.connectClock;\n        }\n      });\n      phxWindow.addEventListener(\"pageshow\", (_e) => {\n        if (awaitingConnectionOnPageShow === this.connectClock) {\n          awaitingConnectionOnPageShow = null;\n          this.connect();\n        }\n      });\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 3e4;\n    this.rejoinAfterMs = (tries) => {\n      if (opts.rejoinAfterMs) {\n        return opts.rejoinAfterMs(tries);\n      } else {\n        return [1e3, 2e3, 5e3][tries - 1] || 1e4;\n      }\n    };\n    this.reconnectAfterMs = (tries) => {\n      if (opts.reconnectAfterMs) {\n        return opts.reconnectAfterMs(tries);\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1e3, 2e3][tries - 1] || 5e3;\n      }\n    };\n    this.logger = opts.logger || null;\n    this.longpollerTimeout = opts.longpollerTimeout || 2e4;\n    this.params = closure(opts.params || {});\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n    this.vsn = opts.vsn || DEFAULT_VSN;\n    this.heartbeatTimer = null;\n    this.pendingHeartbeatRef = null;\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect());\n    }, this.reconnectAfterMs);\n  }\n  replaceTransport(newTransport) {\n    this.disconnect();\n    this.transport = newTransport;\n  }\n  protocol() {\n    return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n  }\n  endPointURL() {\n    let uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params()), { vsn: this.vsn });\n    if (uri.charAt(0) !== \"/\") {\n      return uri;\n    }\n    if (uri.charAt(1) === \"/\") {\n      return `${this.protocol()}:${uri}`;\n    }\n    return `${this.protocol()}://${location.host}${uri}`;\n  }\n  disconnect(callback, code, reason) {\n    this.connectClock++;\n    this.closeWasClean = true;\n    this.reconnectTimer.reset();\n    this.teardown(callback, code, reason);\n  }\n  connect(params) {\n    this.connectClock++;\n    if (params) {\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n      this.params = closure(params);\n    }\n    if (this.conn) {\n      return;\n    }\n    this.closeWasClean = false;\n    this.conn = new this.transport(this.endPointURL());\n    this.conn.binaryType = this.binaryType;\n    this.conn.timeout = this.longpollerTimeout;\n    this.conn.onopen = () => this.onConnOpen();\n    this.conn.onerror = (error) => this.onConnError(error);\n    this.conn.onmessage = (event) => this.onConnMessage(event);\n    this.conn.onclose = (event) => this.onConnClose(event);\n  }\n  log(kind, msg, data) {\n    this.logger(kind, msg, data);\n  }\n  hasLogger() {\n    return this.logger !== null;\n  }\n  onOpen(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.open.push([ref, callback]);\n    return ref;\n  }\n  onClose(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.close.push([ref, callback]);\n    return ref;\n  }\n  onError(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.error.push([ref, callback]);\n    return ref;\n  }\n  onMessage(callback) {\n    let ref = this.makeRef();\n    this.stateChangeCallbacks.message.push([ref, callback]);\n    return ref;\n  }\n  onConnOpen() {\n    if (this.hasLogger())\n      this.log(\"transport\", `connected to ${this.endPointURL()}`);\n    this.closeWasClean = false;\n    this.establishedConnections++;\n    this.flushSendBuffer();\n    this.reconnectTimer.reset();\n    this.resetHeartbeat();\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback());\n  }\n  heartbeatTimeout() {\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null;\n      if (this.hasLogger()) {\n        this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n      }\n      this.abnormalClose(\"heartbeat timeout\");\n    }\n  }\n  resetHeartbeat() {\n    if (this.conn && this.conn.skipHeartbeat) {\n      return;\n    }\n    this.pendingHeartbeatRef = null;\n    clearTimeout(this.heartbeatTimer);\n    setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n  }\n  teardown(callback, code, reason) {\n    if (!this.conn) {\n      return callback && callback();\n    }\n    this.waitForBufferDone(() => {\n      if (this.conn) {\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n      }\n      this.waitForSocketClosed(() => {\n        if (this.conn) {\n          this.conn.onclose = function() {\n          };\n          this.conn = null;\n        }\n        callback && callback();\n      });\n    });\n  }\n  waitForBufferDone(callback, tries = 1) {\n    if (tries === 5 || !this.conn || !this.conn.bufferedAmount) {\n      callback();\n      return;\n    }\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1);\n    }, 150 * tries);\n  }\n  waitForSocketClosed(callback, tries = 1) {\n    if (tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed) {\n      callback();\n      return;\n    }\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1);\n    }, 150 * tries);\n  }\n  onConnClose(event) {\n    let closeCode = event && event.code;\n    if (this.hasLogger())\n      this.log(\"transport\", \"close\", event);\n    this.triggerChanError();\n    clearTimeout(this.heartbeatTimer);\n    if (!this.closeWasClean && closeCode !== 1e3) {\n      this.reconnectTimer.scheduleTimeout();\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event));\n  }\n  onConnError(error) {\n    if (this.hasLogger())\n      this.log(\"transport\", error);\n    let transportBefore = this.transport;\n    let establishedBefore = this.establishedConnections;\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore);\n    });\n    if (transportBefore === this.transport || establishedBefore > 0) {\n      this.triggerChanError();\n    }\n  }\n  triggerChanError() {\n    this.channels.forEach((channel) => {\n      if (!(channel.isErrored() || channel.isLeaving() || channel.isClosed())) {\n        channel.trigger(CHANNEL_EVENTS.error);\n      }\n    });\n  }\n  connectionState() {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return \"connecting\";\n      case SOCKET_STATES.open:\n        return \"open\";\n      case SOCKET_STATES.closing:\n        return \"closing\";\n      default:\n        return \"closed\";\n    }\n  }\n  isConnected() {\n    return this.connectionState() === \"open\";\n  }\n  remove(channel) {\n    this.off(channel.stateChangeRefs);\n    this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n  }\n  off(refs) {\n    for (let key in this.stateChangeCallbacks) {\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1;\n      });\n    }\n  }\n  channel(topic, chanParams = {}) {\n    let chan = new Channel(topic, chanParams, this);\n    this.channels.push(chan);\n    return chan;\n  }\n  push(data) {\n    if (this.hasLogger()) {\n      let { topic, event, payload, ref, join_ref } = data;\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload);\n    }\n    if (this.isConnected()) {\n      this.encode(data, (result) => this.conn.send(result));\n    } else {\n      this.sendBuffer.push(() => this.encode(data, (result) => this.conn.send(result)));\n    }\n  }\n  makeRef() {\n    let newRef = this.ref + 1;\n    if (newRef === this.ref) {\n      this.ref = 0;\n    } else {\n      this.ref = newRef;\n    }\n    return this.ref.toString();\n  }\n  sendHeartbeat() {\n    if (this.pendingHeartbeatRef && !this.isConnected()) {\n      return;\n    }\n    this.pendingHeartbeatRef = this.makeRef();\n    this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef });\n    this.heartbeatTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs);\n  }\n  abnormalClose(reason) {\n    this.closeWasClean = false;\n    if (this.isConnected()) {\n      this.conn.close(WS_CLOSE_NORMAL, reason);\n    }\n  }\n  flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback());\n      this.sendBuffer = [];\n    }\n  }\n  onConnMessage(rawMessage) {\n    this.decode(rawMessage.data, (msg) => {\n      let { topic, event, payload, ref, join_ref } = msg;\n      if (ref && ref === this.pendingHeartbeatRef) {\n        clearTimeout(this.heartbeatTimer);\n        this.pendingHeartbeatRef = null;\n        setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n      }\n      if (this.hasLogger())\n        this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload);\n      for (let i = 0; i < this.channels.length; i++) {\n        const channel = this.channels[i];\n        if (!channel.isMember(topic, event, payload, join_ref)) {\n          continue;\n        }\n        channel.trigger(event, payload, ref, join_ref);\n      }\n      for (let i = 0; i < this.stateChangeCallbacks.message.length; i++) {\n        let [, callback] = this.stateChangeCallbacks.message[i];\n        callback(msg);\n      }\n    });\n  }\n  leaveOpenTopic(topic) {\n    let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n    if (dupChannel) {\n      if (this.hasLogger())\n        this.log(\"transport\", `leaving duplicate topic \"${topic}\"`);\n      dupChannel.leave();\n    }\n  }\n};\n//# sourceMappingURL=phoenix.cjs.js.map\n  })();\n});"]}